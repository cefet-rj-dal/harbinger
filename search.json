[{"path":"https://cefet-rj-dal.github.io/harbinger/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 harbinger authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eduardo Ogasawara. Author, thesis advisor, maintainer. Antonio Castro. Author. Antonio Mello. Author. Diego Carvalho. Contributor. Eduardo Bezerra. Contributor. Ellen Paixão. Author. Fernando Fraga. Author. Heraldo Borges. Author. Janio Lima. Author. Jessica Souza. Author. Lais Baroni. Author. Lucas Tavares. Author. Michel Reis. Author. Rebecca Salles. Author. CEFET/RJ. Copyright holder.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ogasawara E, Castro , Mello , Paixão E, Fraga F, Borges H, Lima J, Souza J, Baroni L, Tavares L, Reis M, Salles R (2025). harbinger: Unified Time Series Event Detection Framework. R package version 1.2.747, https://cefet-rj-dal.github.io/harbinger/.","code":"@Manual{,   title = {harbinger: A Unified Time Series Event Detection Framework},   author = {Eduardo Ogasawara and Antonio Castro and Antonio Mello and Ellen Paixão and Fernando Fraga and Heraldo Borges and Janio Lima and Jessica Souza and Lais Baroni and Lucas Tavares and Michel Reis and Rebecca Salles},   year = {2025},   note = {R package version 1.2.747},   url = {https://cefet-rj-dal.github.io/harbinger/}, }"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"id_-harbinger","dir":"","previous_headings":"","what":"A Unified Time Series Event Detection Framework","title":"A Unified Time Series Event Detection Framework","text":"Harbinger framework event detection time series. provides integrated environment anomaly detection, change point detection, motif discovery. Harbinger offers broad range methods functions plotting evaluating detected events. anomaly detection, methods based : - Machine learning model deviation: Conv1D, ELM, MLP, LSTM, Random Regression Forest, SVM - Classification models: Decision Tree, KNN, MLP, Naive Bayes, Random Forest, SVM - Clustering: k-means DTW - Statistical techniques: ARIMA, FBIAD, GARCH change point detection, Harbinger includes: - Linear regression, ARIMA, ETS, GARCH-based approaches - Classic methods AMOC, ChowTest, Binary Segmentation (BinSeg), GFT, PELT motif discovery, provides: - Methods based Hashing Matrix Profile Harbinger also supports multivariate time series analysis event evaluation using traditional soft computing metrics. architecture Harbinger based Experiment Lines built top DAL Toolbox. design makes easy extend integrate new methods framework.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"A Unified Time Series Event Detection Framework","text":"Examples Harbinger organized application area: General Anomalies Change points Motifs","code":"library(harbinger) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo #> Registered S3 methods overwritten by 'forecast': #>   method  from  #>   head.ts stats #>   tail.ts stats  #loading the example database data(examples_anomalies)  #model model <- harbinger()  #stub detector detection <- detect(model, examples_anomalies$simple$serie)  # filtering detected events library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union print(detection |> dplyr::filter(event==TRUE)) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Unified Time Series Event Detection Framework","text":"latest version Harbinger available CRAN: can install development version GitHub:","code":"install.packages(\"harbinger\") library(devtools) devtools::install_github(\"cefet-rj-dal/harbinger\", force = TRUE, upgrade = \"never\")"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"bug-reports-and-feature-requests","dir":"","previous_headings":"","what":"Bug reports and feature requests","title":"A Unified Time Series Event Detection Framework","text":"find bugs like suggest new features, please submit issue : https://github.com/cefet-rj-dal/harbinger/issues","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect events in time series — detect","title":"Detect events in time series — detect","text":"Generic S3 generic event detection using fitted Harbinger model. Concrete methods implemented detector class.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect events in time series — detect","text":"","code":"detect(obj, ...)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect events in time series — detect","text":"obj harbinger detector object. ... Additional arguments passed methods.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect events in time series — detect","text":"data frame columns: idx (index), event (logical), type (character: \"anomaly\", \"changepoint\", \"\"). detectors may also attach attributes (e.g., threshold) columns (e.g., seq, seqlen).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect events in time series — detect","text":"","code":"# See detector-specific examples in the package site for usage patterns # and plotting helpers."},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for anomaly detection — examples_anomalies","title":"Time series for anomaly detection — examples_anomalies","text":"list time series designed anomaly detection tasks. simple: simple synthetic series isolated anomalies. contextual: contextual anomalies relative local behavior. trend: synthetic series trend anomalies. multiple: multiple anomalies. sequence: repeated anomalous sequences. tt: train-test split synthetic series. tt_warped: warped train-test synthetic series. #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for anomaly detection — examples_anomalies","text":"","code":"data(examples_anomalies)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for anomaly detection — examples_anomalies","text":"list time series anomaly detection.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for anomaly detection — examples_anomalies","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for anomaly detection — examples_anomalies","text":"Harbinger package Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for anomaly detection — examples_anomalies","text":"","code":"data(examples_anomalies) # Select a simple anomaly series serie <- examples_anomalies$simple head(serie) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for change point detection — examples_changepoints","title":"Time series for change point detection — examples_changepoints","text":"list time series change point experiments. simple: simple synthetic series one change point. sinusoidal: sinusoidal pattern regime change. incremental: gradual change mean/variance. abrupt: abrupt level shift. volatility: variance change. #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for change point detection — examples_changepoints","text":"","code":"data(examples_changepoints)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for change point detection — examples_changepoints","text":"list time series change point detection.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for change point detection — examples_changepoints","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for change point detection — examples_changepoints","text":"Harbinger package Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for change point detection — examples_changepoints","text":"","code":"data(examples_changepoints) # Select a simple change point series serie <- examples_changepoints$simple head(serie) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for event detection — examples_harbinger","title":"Time series for event detection — examples_harbinger","text":"list time series demonstrating event detection tasks. nonstationarity: synthetic nonstationary time series. global_temperature_yearly: yearly global temperature. global_temperature_monthly: monthly global temperature. multidimensional: multivariate series change point. seattle_week: Seattle weekly temperature 2019. seattle_daily: Seattle daily temperature 2019. #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for event detection — examples_harbinger","text":"","code":"data(examples_harbinger)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for event detection — examples_harbinger","text":"list time series.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for event detection — examples_harbinger","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for event detection — examples_harbinger","text":"Harbinger package Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for event detection — examples_harbinger","text":"","code":"data(examples_harbinger) # Inspect a series (Seattle daily temperatures) serie <- examples_harbinger$seattle_daily head(serie) #> # A tibble: 6 × 5 #>       i serie   min   max event #>   <int> <dbl> <dbl> <dbl> <lgl> #> 1     1  3.28 0.556  6.11 FALSE #> 2     2  3.78 0      8.33 FALSE #> 3     3  9    6.11  13.3  FALSE #> 4     4  9.44 8.33  11.1  FALSE #> 5     5  7.83 5.56  10.6  FALSE #> 6     6  5.72 2.78   8.89 FALSE"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for motif/discord discovery — examples_motifs","title":"Time series for motif/discord discovery — examples_motifs","text":"list time series motif (repeated patterns) discord (rare patterns) discovery. simple: simple synthetic series motifs. mitdb100: sample MIT-BIH arrhythmia database (record 100). mitdb102: sample MIT-BIH arrhythmia database (record 102). #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for motif/discord discovery — examples_motifs","text":"","code":"data(examples_motifs)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for motif/discord discovery — examples_motifs","text":"list time series motif discovery.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for motif/discord discovery — examples_motifs","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for motif/discord discovery — examples_motifs","text":"Harbinger package Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for motif/discord discovery — examples_motifs","text":"","code":"data(examples_motifs) # Select a simple motif series serie <- examples_motifs$simple head(serie) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using autoencoders — han_autoencoder","title":"Anomaly detector using autoencoders — han_autoencoder","text":"Trains encoder-decoder (autoencoder) reconstruct sliding windows series; large reconstruction errors indicate anomalies.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using autoencoders — han_autoencoder","text":"","code":"han_autoencoder(input_size, encode_size, encoderclass = autoenc_base_ed, ...)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using autoencoders — han_autoencoder","text":"input_size Integer. Input (output) window size autoencoder. encode_size Integer. Size encoded (bottleneck) representation. encoderclass DALToolbox encoder-decoder constructor instantiate. ... Additional arguments forwarded encoderclass.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using autoencoders — han_autoencoder","text":"han_autoencoder object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using autoencoders — han_autoencoder","text":"Sakurada M, Yairi T (2014). Anomaly Detection Using Autoencoders Nonlinear Dimensionality Reduction. MLSDA 2014.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using autoencoders — han_autoencoder","text":"","code":"library(daltoolbox) #>  #> Attaching package: ‘daltoolbox’ #> The following object is masked from ‘package:base’: #>  #>     transform library(tspredit)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure an autoencoder-based anomaly detector model <- han_autoencoder(input_size = 5, encode_size = 3)  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Inspect detected anomalies print(detection[detection$event, ]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector based on ML classification — hanc_ml","title":"Anomaly detector based on ML classification — hanc_ml","text":"Supervised anomaly detection using DALToolbox classifier trained labeled events. Predictions probability threshold flagged. set preconfigured classification methods listed https://cefet-rj-dal.github.io/daltoolbox/ (e.g., cla_majority, cla_dtree, cla_knn, cla_mlp, cla_nb, cla_rf, cla_svm).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector based on ML classification — hanc_ml","text":"","code":"hanc_ml(model, threshold = 0.5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector based on ML classification — hanc_ml","text":"model DALToolbox classification model. threshold Numeric. Probability threshold positive class.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector based on ML classification — hanc_ml","text":"hanc_ml object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector based on ML classification — hanc_ml","text":"Bishop CM (2006). Pattern Recognition Machine Learning. Springer. Hyndman RJ, Athanasopoulos G (2021). Forecasting: Principles Practice. OTexts. Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector based on ML classification — hanc_ml","text":"","code":"library(daltoolbox)  # Load labeled anomaly dataset data(examples_anomalies)  # Use train-test example dataset <- examples_anomalies$tt dataset$event <- factor(dataset$event, labels=c(\"FALSE\", \"TRUE\")) slevels <- levels(dataset$event)  # Split into training and test train <- dataset[1:80,] test <- dataset[-(1:80),]  # Normalize features norm <- minmax() norm <- fit(norm, train) train_n <- daltoolbox::transform(norm, train)  # Configure a decision tree classifier model <- hanc_ml(cla_dtree(\"event\", slevels))  # Fit the classifier model <- fit(model, train_n)  # Evaluate detections on the test set test_n <- daltoolbox::transform(norm, test)  detection <- detect(model, test_n) print(detection[(detection$event),]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using DTW — hanct_dtw","title":"Anomaly detector using DTW — hanct_dtw","text":"Anomaly detection using DTW DTW applied time series. seq equals one, observations distant closest centroids labeled anomalies. seq grater one, sequences distant closest centroids labeled discords. wraps tsclust presented dtwclust library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using DTW — hanct_dtw","text":"","code":"hanct_dtw(seq = 1, centers = NA)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using DTW — hanct_dtw","text":"seq sequence size centers number centroids","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using DTW — hanct_dtw","text":"hanct_dtw object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using DTW — hanct_dtw","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using DTW — hanct_dtw","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure DTW-based detector model <- hanct_dtw()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using kmeans — hanct_kmeans","title":"Anomaly detector using kmeans — hanct_kmeans","text":"Anomaly detection using kmeans kmeans applied time series. seq equals one, observations distant closest centroids labeled anomalies. seq grater one, sequences distant closest centroids labeled discords. wraps kmeans presented stats library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using kmeans — hanct_kmeans","text":"","code":"hanct_kmeans(seq = 1, centers = NA)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using kmeans — hanct_kmeans","text":"seq sequence size centers number centroids","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using kmeans — hanct_kmeans","text":"hanct_kmeans object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using kmeans — hanct_kmeans","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using kmeans — hanct_kmeans","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure k-means detector model <- hanct_kmeans()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using ARIMA — hanr_arima","title":"Anomaly detector using ARIMA — hanr_arima","text":"Fits ARIMA model series flags observations large model residuals anomalies. Wraps ARIMA forecast package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using ARIMA — hanr_arima","text":"","code":"hanr_arima()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using ARIMA — hanr_arima","text":"hanr_arima object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anomaly detector using ARIMA — hanr_arima","text":"detector estimates ARIMA(p,d,q) computes standardized residuals. Residual magnitudes summarized via distance function thresholded outlier heuristics harutils().","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using ARIMA — hanr_arima","text":"Box GEP, Jenkins GM, Reinsel GC, Ljung GM (2015). Time Series Analysis: Forecasting Control. Wiley.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using ARIMA — hanr_arima","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure ARIMA anomaly detector model <- hanr_arima()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using EMD — hanr_emd","title":"Anomaly detector using EMD — hanr_emd","text":"Empirical Mode Decomposition (CEEMD) extract intrinsic mode functions flag anomalies high-frequency components. Wraps hht::CEEMD.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using EMD — hanr_emd","text":"","code":"hanr_emd(noise = 0.1, trials = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using EMD — hanr_emd","text":"noise Numeric. Noise amplitude CEEMD. trials Integer. Number CEEMD trials.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using EMD — hanr_emd","text":"hanr_emd object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using EMD — hanr_emd","text":"Huang NE, et al. (1998). empirical mode decomposition Hilbert spectrum nonlinear non-stationary time series analysis. Proc. Royal Society .","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using EMD — hanr_emd","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure EMD-based anomaly detector model <- hanr_emd()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 49  49  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using FBIAD — hanr_fbiad","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"Anomaly detector using FBIAD","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"","code":"hanr_fbiad(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"sw_size Window size FBIAD","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"hanr_fbiad object Forward Backward Inertial Anomaly Detector (FBIAD) detects anomalies time series. Anomalies observations differ forward backward time series inertia doi:10.1109/IJCNN55064.2022.9892088.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"Lima, J., Salles, R., Porto, F., Coutinho, R., Alpis, P., Escobar, L., Pacitti, E., Ogasawara, E. Forward Backward Inertial Anomaly Detector: Novel Time Series Event Detection Method. Proceedings International Joint Conference Neural Networks, 2022. doi:10.1109/IJCNN55064.2022.9892088","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure FBIAD detector model <- hanr_fbiad()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using FFT — hanr_fft","title":"Anomaly detector using FFT — hanr_fft","text":"High-pass filtering via FFT isolate high-frequency components; anomalies flagged filtered magnitude departs strongly baseline.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using FFT — hanr_fft","text":"","code":"hanr_fft()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using FFT — hanr_fft","text":"hanr_fft object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anomaly detector using FFT — hanr_fft","text":"spectrum computed FFT, cutoff selected power spectrum, low frequencies nulled, inverse FFT reconstructs high-pass signal. Magnitudes summarized thresholded using harutils().","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using FFT — hanr_fft","text":"Sobrinho, E. P., Souza, J., Lima, J., Giusti, L., Bezerra, E., Coutinho, R., Baroni, L., Pacitti, E., Porto, F., Belloze, K., Ogasawara, E. Fine-Tuning Detection Criteria Enhancing Anomaly Detection Time Series. : Simpósio Brasileiro de Banco de Dados (SBBD). SBC, 29 Sep. 2025. doi:10.5753/sbbd.2025.247063","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using FFT — hanr_fft","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure FFT-based anomaly detector model <- hanr_fft()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"function implements anomaly detection method uses Fast Fourier daltoolbox::transform (FFT) combined automatic frequency cutoff strategy based AMOC (One Change) algorithm. model analyzes power spectrum time series detects optimal cutoff frequency — point frequency content significantly changes — using changepoint detection method changepoint package. frequencies cutoff removed spectrum, inverse FFT reconstructs filtered version original signal preserves high-frequency components. resulting residual signal analyzed identify anomalous patterns based distance expected behavior. function extends HARBINGER framework returns object class hanr_fft_amoc.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"","code":"hanr_fft_amoc()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"hanr_fft_amoc object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"Sobrinho, E. P., Souza, J., Lima, J., Giusti, L., Bezerra, E., Coutinho, R., Baroni, L., Pacitti, E., Porto, F., Belloze, K., Ogasawara, E. Fine-Tuning Detection Criteria Enhancing Anomaly Detection Time Series. : Simpósio Brasileiro de Banco de Dados (SBBD). SBC, 29 Sep. 2025. doi:10.5753/sbbd.2025.247063","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure FFT+AMOC detector model <- hanr_fft_amoc()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Inspect detected anomalies print(detection[detection$event, ]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"function implements anomaly detection method based Fast Fourier daltoolbox::transform (FFT) changepoint-based cutoff strategy using AMOC (One Change) algorithm applied cumulative sum (CUSUM) power spectrum. method first computes FFT input time series extracts power spectrum. applies CUSUM transformation spectral data emphasize gradual changes shifts spectral energy. Using AMOC algorithm, detects single changepoint CUSUM-transformed spectrum, serves cutoff index remove lower-frequency components. remaining high-frequency components reconstructed time-domain signal via inverse FFT, effectively isolating rapid local deviations. Anomalies detected evaluating distance filtered signal original series, highlighting points deviate significantly expected pattern. method suitable series spectral shifts subtle single significant change behavior expected. function extends HARBINGER framework returns object class hanr_fft_amoc_cusum.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"","code":"hanr_fft_amoc_cusum()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"hanr_fft_amoc_cusum object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure FFT+CUSUM+AMOC detector model <- hanr_fft_amoc_cusum()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Inspect detected anomalies print(detection[detection$event, ]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"function implements anomaly detection method combines Fast Fourier daltoolbox::transform (FFT) spectral cutoff strategy based Binary Segmentation (BinSeg) algorithm changepoint detection. method analyzes power spectrum input time series applies BinSeg algorithm identify changepoint spectral density, corresponding shift frequency content. Frequencies changepoint considered part underlying trend noise removed signal. modified spectrum transformed back time domain via inverse FFT, resulting high-pass filtered version series. Anomalies identified measuring distance original filtered signal, highlighting unusual deviations dominant signal behavior. function part HARBINGER framework returns object class hanr_fft_binseg.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"","code":"hanr_fft_binseg()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"hanr_fft_binseg object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"Sobrinho, E. P., Souza, J., Lima, J., Giusti, L., Bezerra, E., Coutinho, R., Baroni, L., Pacitti, E., Porto, F., Belloze, K., Ogasawara, E. Fine-Tuning Detection Criteria Enhancing Anomaly Detection Time Series. : Simpósio Brasileiro de Banco de Dados (SBBD). SBC, 29 Sep. 2025. doi:10.5753/sbbd.2025.247063","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure FFT+BinSeg detector model <- hanr_fft_binseg()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Inspect detected anomalies print(detection[detection$event, ]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"function implements anomaly detection method combines Fast Fourier daltoolbox::transform (FFT) changepoint-based cutoff strategy using Binary Segmentation (BinSeg) method applied cumulative sum (CUSUM) frequency spectrum. method first computes FFT input time series obtains power spectrum. , applies CUSUM transformation spectral density enhance detection gradual transitions accumulated changes energy across frequencies. Binary Segmentation method applied CUSUM-transformed spectrum identify changepoint defines cutoff frequency. Frequencies cutoff removed spectrum, signal reconstructed using inverse FFT. produces filtered signal retains high-frequency components, emphasizing potential anomalies. Anomalies detected measuring deviation filtered signal original one, applying outlier detection mechanism based residual. function extends HARBINGER framework returns object class hanr_fft_binseg_cusum.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"","code":"hanr_fft_binseg_cusum()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"hanr_fft_binseg_cusum object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"Sobrinho, E. P., Souza, J., Lima, J., Giusti, L., Bezerra, E., Coutinho, R., Baroni, L., Pacitti, E., Porto, F., Belloze, K., Ogasawara, E. Fine-Tuning Detection Criteria Enhancing Anomaly Detection Time Series. : Simpósio Brasileiro de Banco de Dados (SBBD). SBC, 29 Sep. 2025. doi:10.5753/sbbd.2025.247063","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft_binseg_cusum()  # fitting the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_sma.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using Adaptive FFT and Moving Average — hanr_fft_sma","title":"Anomaly Detector using Adaptive FFT and Moving Average — hanr_fft_sma","text":"function implements anomaly detection model based Fast Fourier daltoolbox::transform (FFT), combined adaptive moving average filter. method estimates dominant frequency input time series using spectral analysis applies moving average filter window size derived frequency. highlights high-frequency deviations, likely anomalies. residuals (original signal minus smoothed version) processed compute distance expected behavior, points significantly distant flagged anomalies. detection also includes grouping strategy reduce false positives selecting representative point cluster consecutive anomalies. function extends HARBINGER framework returns object class hanr_fft_sma.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_sma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using Adaptive FFT and Moving Average — hanr_fft_sma","text":"","code":"hanr_fft_sma()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_sma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using Adaptive FFT and Moving Average — hanr_fft_sma","text":"hanr_fft_sma object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_sma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly Detector using Adaptive FFT and Moving Average — hanr_fft_sma","text":"Sobrinho, E. P., Souza, J., Lima, J., Giusti, L., Bezerra, E., Coutinho, R., Baroni, L., Pacitti, E., Porto, F., Belloze, K., Ogasawara, E. Fine-Tuning Detection Criteria Enhancing Anomaly Detection Time Series. : Simpósio Brasileiro de Banco de Dados (SBBD). SBC, 29 Sep. 2025. doi:10.5753/sbbd.2025.247063","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_sma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using Adaptive FFT and Moving Average — hanr_fft_sma","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft_sma()  # fitting the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie) #> Warning: longer object length is not a multiple of shorter object length  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using GARCH — hanr_garch","title":"Anomaly detector using GARCH — hanr_garch","text":"Fits GARCH model capture conditional heteroskedasticity flags observations large standardized residuals anomalies. Wraps rugarch.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using GARCH — hanr_garch","text":"","code":"hanr_garch()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using GARCH — hanr_garch","text":"hanr_garch object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anomaly detector using GARCH — hanr_garch","text":"sGARCH(1,1) ARMA(1,1) mean estimated. Standardized residuals summarized thresholded via harutils().","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using GARCH — hanr_garch","text":"Engle RF (1982). Autoregressive Conditional Heteroscedasticity Estimates Variance United Kingdom Inflation. Econometrica, 50(4):987–1007. Bollerslev T (1986). Generalized Autoregressive Conditional Heteroskedasticity. Journal Econometrics, 31(3):307–327.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using GARCH — hanr_garch","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure GARCH anomaly detector model <- hanr_garch()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using histograms — hanr_histogram","title":"Anomaly detector using histograms — hanr_histogram","text":"Flags observations fall low-density histogram bins outside observed bin range.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using histograms — hanr_histogram","text":"","code":"hanr_histogram(density_threshold = 0.05)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using histograms — hanr_histogram","text":"density_threshold Numeric 0 1. Minimum bin density avoid considered anomaly (default 0.05).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using histograms — hanr_histogram","text":"hanr_histogram object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using histograms — hanr_histogram","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using histograms — hanr_histogram","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure histogram-based detector model <- hanr_histogram()  # Fit the model (no-op) model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 1    1  TRUE anomaly #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector based on ML regression — hanr_ml","title":"Anomaly detector based on ML regression — hanr_ml","text":"Trains regression model forecast next value sliding window flags large prediction errors anomalies. Uses DALToolbox regressors. set preconfigured regression methods described https://cefet-rj-dal.github.io/daltoolbox/ (e.g., ts_elm, ts_conv1d, ts_lstm, ts_mlp, ts_rf, ts_svm).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector based on ML regression — hanr_ml","text":"","code":"hanr_ml(model, sw_size = 15)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector based on ML regression — hanr_ml","text":"model DALToolbox regression model. sw_size Integer. Sliding window size.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector based on ML regression — hanr_ml","text":"hanr_ml object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector based on ML regression — hanr_ml","text":"Hyndman RJ, Athanasopoulos G (2021). Forecasting: Principles Practice. OTexts. Goodfellow , Bengio Y, Courville (2016). Deep Learning. MIT Press.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector based on ML regression — hanr_ml","text":"","code":"library(daltoolbox) library(tspredit)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure a time series regression model model <- hanr_ml(tspredit::ts_elm(tspredit::ts_norm_gminmax(),                    input_size=4, nhid=3, actfun=\"purelin\"))  # Fit the model model <- daltoolbox::fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 52  52  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_remd.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using REMD — hanr_remd","title":"Anomaly detector using REMD — hanr_remd","text":"Anomaly detection using REMD EMD model adjusts time series. Observations distant model labeled anomalies. wraps EMD model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_remd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using REMD — hanr_remd","text":"","code":"hanr_remd(noise = 0.1, trials = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_remd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using REMD — hanr_remd","text":"noise nosie trials trials","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_remd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using REMD — hanr_remd","text":"hanr_remd object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_remd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using REMD — hanr_remd","text":"Souza, J., Paixão, E., Fraga, F., Baroni, L., Alves, R. F. S., Belloze, K., Dos Santos, J., Bezerra, E., Porto, F., Ogasawara, E. REMD: Novel Hybrid Anomaly Detection Method Based EMD ARIMA. Proceedings International Joint Conference Neural Networks, 2024. doi:10.1109/IJCNN60899.2024.10651192","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_remd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using REMD — hanr_remd","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure REMD detector model <- hanr_remd()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 51  51  TRUE anomaly #> 53  53  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_rtad.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly and change point detector using RTAD — hanr_rtad","title":"Anomaly and change point detector using RTAD — hanr_rtad","text":"Anomaly change point detection using RTAD RTAD model adjusts time series. Observations distant model labeled anomalies. wraps EMD model presented hht library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_rtad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly and change point detector using RTAD — hanr_rtad","text":"","code":"hanr_rtad(sw_size = 30, noise = 0.001, trials = 5, sigma = sd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_rtad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly and change point detector using RTAD — hanr_rtad","text":"sw_size sliding window size (default 30) noise noise trials trials sigma function compute dispersion","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_rtad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly and change point detector using RTAD — hanr_rtad","text":"hanr_rtad object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_rtad.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly and change point detector using RTAD — hanr_rtad","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_rtad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly and change point detector using RTAD — hanr_rtad","text":"","code":"library(daltoolbox) library(zoo) #>  #> Attaching package: ‘zoo’ #> The following objects are masked from ‘package:base’: #>  #>     as.Date, as.Date.numeric  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure RTAD detector model <- hanr_rtad()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using Wavelets — hanr_wavelet","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"Multiresolution decomposition via wavelets; anomalies flagged aggregated wavelet detail coefficients indicate unusual energy.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"","code":"hanr_wavelet(filter = \"haar\")"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"filter Character. Available wavelet filters: haar, d4, la8, bl14, c6.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"hanr_wavelet object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"series decomposed MODWT detail bands aggregated compute magnitude signal thresholded using harutils().","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"Mallat S (1989). theory multiresolution signal decomposition: wavelet representation. IEEE Transactions Pattern Analysis Machine Intelligence, 11(7):674–693.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using Wavelets — hanr_wavelet","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure wavelet-based anomaly detector model <- hanr_wavelet()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected anomalies print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger Ensemble — har_ensemble","title":"Harbinger Ensemble — har_ensemble","text":"Majority-vote ensemble across multiple Harbinger detectors optional temporal fuzzification combine nearby detections.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger Ensemble — har_ensemble","text":"","code":"har_ensemble(...)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harbinger Ensemble — har_ensemble","text":"... One detector objects.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger Ensemble — har_ensemble","text":"har_ensemble object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Harbinger Ensemble — har_ensemble","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger Ensemble — har_ensemble","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use a simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure an ensemble of detectors model <- har_ensemble(hanr_arima(), hanr_arima(), hanr_arima()) # model <- har_ensemble(hanr_fbiad(), hanr_arima(), hanr_emd())  # Fit all ensemble members model <- fit(model, dataset$serie)  # Run ensemble detection detection <- detect(model, dataset$serie)  # Show detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of event detection — har_eval","title":"Evaluation of event detection — har_eval","text":"Hard evaluation event detection producing confusion matrix common metrics (accuracy, precision, recall, F1, etc.).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of event detection — har_eval","text":"","code":"har_eval()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of event detection — har_eval","text":"har_eval object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluation of event detection — har_eval","text":"Salles, R., Lima, J., Reis, M., Coutinho, R., Pacitti, E., Masseglia, F., Akbarinia, R., Chen, C., Garibaldi, J., Porto, F., Ogasawara, E. SoftED: Metrics soft evaluation time series event detection. Computers Industrial Engineering, 2024. doi:10.1016/j.cie.2024.110728","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of event detection — har_eval","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure a change-point detector (GARCH) model <- hcp_garch()  # Fit the detector model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected events print(detection[(detection$event),]) #>    idx event        type #> 52  52  TRUE changepoint  # Evaluate detections evaluation <- evaluate(har_eval(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0     1     #> FALSE     1     99     # Plot the results grf <- har_plot(model, dataset$serie, detection, dataset$event) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> ℹ The deprecated feature was likely used in the harbinger package. #>   Please report the issue at #>   <https://github.com/cefet-rj-dal/harbinger/issues>. plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of event detection (SoftED) — har_eval_soft","title":"Evaluation of event detection (SoftED) — har_eval_soft","text":"Soft evaluation event detection using SoftED doi:10.48550/arXiv.2304.00439.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of event detection (SoftED) — har_eval_soft","text":"","code":"har_eval_soft(sw_size = 15)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of event detection (SoftED) — har_eval_soft","text":"sw_size Integer. Tolerance window size soft matching.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of event detection (SoftED) — har_eval_soft","text":"har_eval_soft object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluation of event detection (SoftED) — har_eval_soft","text":"Salles, R., Lima, J., Reis, M., Coutinho, R., Pacitti, E., Masseglia, F., Akbarinia, R., Chen, C., Garibaldi, J., Porto, F., Ogasawara, E. SoftED: Metrics soft evaluation time series event detection. Computers Industrial Engineering, 2024. doi:10.1016/j.cie.2024.110728","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of event detection (SoftED) — har_eval_soft","text":"","code":"library(daltoolbox)  # Load anomaly example data data(examples_anomalies)  # Use the simple series dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Configure a change-point detector (GARCH) model <- hcp_garch()  # Fit the detector model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected events print(detection[(detection$event),]) #>    idx event        type #> 52  52  TRUE changepoint  # Evaluate detections (SoftED) evaluation <- evaluate(har_eval_soft(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0.87  0.13  #> FALSE     0.13  99.87  # Plot the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot event detection on a time series — har_plot","title":"Plot event detection on a time series — har_plot","text":"Convenience plotting helper Harbinger detections. accepts detector, input series, optional detection data.frame, optional ground-truth events color-code true positives (TP), false positives (FP), false negatives (FN). can also mark detected change points draw reference horizontal lines.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot event detection on a time series — har_plot","text":"","code":"har_plot(   obj,   serie,   detection = NULL,   event = NULL,   mark.cp = TRUE,   ylim = NULL,   idx = NULL,   pointsize = 0.5,   colors = c(\"green\", \"blue\", \"red\", \"purple\"),   yline = NULL )"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot event detection on a time series — har_plot","text":"obj harbinger detector used produce detection. serie Numeric vector time series plot. detection Optional detection data.frame returned detect(). event Optional logical vector ground-truth events (length serie). mark.cp Logical; TRUE, marks detected change points dashed vertical lines. ylim Optional numeric vector length 2 y-axis limits. idx Optional x-axis labels indices (defaults seq_along(serie)). pointsize Base point size observations. colors Character vector length 4 colors TP, FN, FP, motif segments. yline Optional numeric vector y values draw dotted horizontal lines.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot event detection on a time series — har_plot","text":"ggplot object showing time series detected events highlighted.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot event detection on a time series — har_plot","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot event detection on a time series — har_plot","text":"","code":"library(daltoolbox)  # Load an example anomaly dataset data(examples_anomalies)  # Use the simple time series dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # Set up an ARIMA-based anomaly detector model <- hanr_arima()  # Fit the detector model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Inspect detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly  # Evaluate detections (soft evaluation) evaluation <- evaluate(har_eval_soft(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      1     0     #> FALSE     0     100    # Plot the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger — harbinger","title":"Harbinger — harbinger","text":"Base class time series event detection Harbinger framework. provides common state handling helper methods used anomaly, change point, motif detectors. Concrete detectors extend class implement fit() /detect() S3 methods.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger — harbinger","text":"","code":"harbinger()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger — harbinger","text":"harbinger object can extended detectors.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harbinger — harbinger","text":"Internally, class stores references original series, indices non-missing observations, helper structures restore detection results original series index space. also exposes utility hooks distance computation outlier post-processing provided harutils().","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Harbinger — harbinger","text":"Harbinger documentation: https://cefet-rj-dal.github.io/harbinger Salles, R., Escobar, L., Baroni, L., Zorrilla, R., Ziviani, ., Kreischer, V., Delicato, F., Pires, P. F., Maia, L., Coutinho, R., Assis, L., Ogasawara, E. Harbinger: Um framework para integração e análise de métodos de detecção de eventos em séries temporais. Anais Simpósio Brasileiro de Banco de Dados (SBBD). : Anais XXXV Simpósio Brasileiro de Bancos de Dados. SBC, 28 Sep. 2020. doi:10.5753/sbbd.2020.13626","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger — harbinger","text":"","code":"# See the specific detector examples for anomalies, change points, and motifs # at https://cefet-rj-dal.github.io/harbinger"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger Utilities — harutils","title":"Harbinger Utilities — harutils","text":"Utility object groups common distance measures, threshold heuristics, outlier grouping rules used Harbinger detectors.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger Utilities — harutils","text":"","code":"harutils()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger Utilities — harutils","text":"harutils object exposing helper functions.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harbinger Utilities — harutils","text":"Provided helpers include: L1 L2 distance aggregations vectors rows matrices/data frames. Thresholding heuristics: boxplot-based (IQR), Gaussian 3-sigma, ratio-based rule. Grouping strategies contiguous outliers: keep first index keep highest-magnitude index. Optional fuzzification detections propagate influence within tolerance window. utilities centralize common tasks ensure consistent behavior across detectors.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Harbinger Utilities — harutils","text":"Tukey JW (1977). Exploratory Data Analysis. Addison-Wesley. (boxplot/IQR heuristic) Shewhart WA (1931). Economic Control Quality Manufactured Product. D. Van Nostrand. (three-sigma rule) Silva, E. P., Balbi, H., Pacitti, E., Porto, F., Santos, J., Ogasawara, E. Cutoff Frequency Adjustment FFT-Based Anomaly Detectors. : Simpósio Brasileiro de Banco de Dados (SBBD). SBC, 14 Oct. 2024. doi:10.5753/sbbd.2024.243319","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger Utilities — harutils","text":"","code":"# Basic usage of utilities utils <- harutils()  # Compute L2 distance on residuals res <- c(0.1, -0.5, 1.2, -0.3) d2 <- utils$har_distance_l2(res) print(d2) #> [1] 0.01 0.25 1.44 0.09  # Apply 3-sigma outlier rule and keep only first index of contiguous runs idx <- utils$har_outliers_gaussian(d2) flags <- utils$har_outliers_checks_firstgroup(idx, d2) print(which(flags)) #> integer(0)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":null,"dir":"Reference","previous_headings":"","what":"At Most One Change (AMOC) — hcp_amoc","title":"At Most One Change (AMOC) — hcp_amoc","text":"Change-point detection method focusing identifying one change mean /variance. wrapper around AMOC implementation changepoint package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"At Most One Change (AMOC) — hcp_amoc","text":"","code":"hcp_amoc()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"At Most One Change (AMOC) — hcp_amoc","text":"hcp_amoc object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"At Most One Change (AMOC) — hcp_amoc","text":"AMOC detects single significant change point cost function optimized univariate series. useful one structural break expected.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"At Most One Change (AMOC) — hcp_amoc","text":"Hinkley DV (1970). Inference change-point sequence random variables. Biometrika, 57(1):1–17. doi:10.1093/biomet/57.1.1 Killick R, Fearnhead P, Eckley IA (2012). Optimal detection changepoints linear computational cost. JASA, 107(500):1590–1598.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"At Most One Change (AMOC) — hcp_amoc","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure the AMOC detector model <- hcp_amoc()  # Fit the detector (no-op for AMOC) model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change point(s) print(detection[(detection$event),]) #>    idx event        type #> 84  84  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Segmentation (BinSeg) — hcp_binseg","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"Multi-change-point detection via Binary Segmentation mean/variance using changepoint package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"","code":"hcp_binseg(Q = 2)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"Q Integer. Maximum number change points search .","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"hcp_binseg object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"Binary Segmentation recursively partitions series around largest detected change maximum number change points stopping criterion met. fast heuristic widely used practice.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"Vostrikova L (1981). Detecting \"disorder\" multidimensional random processes. Soviet Mathematics Doklady, 24, 55–59. Killick R, Fearnhead P, Eckley IA (2012). Optimal detection changepoints linear computational cost. JASA, 107(500):1590–1598. dplyr::context","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Segmentation (BinSeg) — hcp_binseg","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure the BinSeg detector model <- hcp_binseg()  # Fit the detector (no-op for BinSeg) model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie) #> Warning: The number of changepoints identified is Q, it is advised to increase Q to make sure changepoints have not been missed.  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 19  19  TRUE changepoint #> 85  85  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using ARIMA — hcp_cf_arima","title":"Change Finder using ARIMA — hcp_cf_arima","text":"Change-point detection modeling residual deviations ARIMA applying second-stage smoothing thresholding, inspired ChangeFinder doi:10.1109/TKDE.2006.1599387. Wraps ARIMA forecast package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using ARIMA — hcp_cf_arima","text":"","code":"hcp_cf_arima(sw_size = NULL)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using ARIMA — hcp_cf_arima","text":"sw_size Integer. Sliding window size smoothing/statistics.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using ARIMA — hcp_cf_arima","text":"hcp_cf_arima object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Change Finder using ARIMA — hcp_cf_arima","text":"Takeuchi J, Yamanishi K (2006). unifying framework detecting outliers change points time series. IEEE Transactions Knowledge Data Engineering.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using ARIMA — hcp_cf_arima","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure ChangeFinder-ARIMA detector model <- hcp_cf_arima()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 51  51  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using ETS — hcp_cf_ets","title":"Change Finder using ETS — hcp_cf_ets","text":"Change-point detection modeling residual deviations ETS applying second-stage smoothing thresholding, inspired ChangeFinder doi:10.1109/TKDE.2006.1599387. Wraps ETS forecast package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using ETS — hcp_cf_ets","text":"","code":"hcp_cf_ets(sw_size = 7)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using ETS — hcp_cf_ets","text":"sw_size Integer. Sliding window size smoothing/statistics.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using ETS — hcp_cf_ets","text":"hcp_cf_ets object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using ETS — hcp_cf_ets","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure ChangeFinder-ETS detector model <- hcp_cf_ets()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 51  51  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using Linear Regression — hcp_cf_lr","title":"Change Finder using Linear Regression — hcp_cf_lr","text":"Change-point detection modeling residual deviations linear regression applying second-stage smoothing thresholding, inspired ChangeFinder doi:10.1109/TKDE.2006.1599387.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using Linear Regression — hcp_cf_lr","text":"","code":"hcp_cf_lr(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using Linear Regression — hcp_cf_lr","text":"sw_size Integer. Sliding window size smoothing/statistics.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using Linear Regression — hcp_cf_lr","text":"hcp_cf_lr object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using Linear Regression — hcp_cf_lr","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure ChangeFinder-LR detector model <- hcp_cf_lr()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":null,"dir":"Reference","previous_headings":"","what":"Chow Test (structural break) — hcp_chow","title":"Chow Test (structural break) — hcp_chow","text":"Change-point detection linear models using F-based structural break tests strucchange package doi:10.18637/jss.v007.i02. wraps Fstats breakpoints implementation available strucchange library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chow Test (structural break) — hcp_chow","text":"","code":"hcp_chow()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chow Test (structural break) — hcp_chow","text":"hcp_chow object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chow Test (structural break) — hcp_chow","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure the Chow detector model <- hcp_chow()  # Fit the detector (no-op for Chow) model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 50  50  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using GARCH — hcp_garch","title":"Change Finder using GARCH — hcp_garch","text":"Change-point detection related event/trend change detection. Change Finder GARCH detects change points based deviations relative linear regression model doi:10.1109/TKDE.2006.1599387. wraps GARCH model presented rugarch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using GARCH — hcp_garch","text":"","code":"hcp_garch(sw_size = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using GARCH — hcp_garch","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using GARCH — hcp_garch","text":"hcp_garch object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Change Finder using GARCH — hcp_garch","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using GARCH — hcp_garch","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a volatility example dataset <- examples_changepoints$volatility head(dataset) #>         serie event #> 1  1.61424200 FALSE #> 2  1.19696424 FALSE #> 3 -0.02275846 FALSE #> 4 -2.22607912 FALSE #> 5  0.01189136 FALSE #> 6 -0.03898793 FALSE  # Configure ChangeFinder-GARCH detector model <- hcp_garch()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>     idx event        type #> 196 196  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Fluctuation Test (GFT) — hcp_gft","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"Structural change detection using generalized fluctuation tests via strucchange::breakpoints() doi:10.18637/jss.v007.i02.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"","code":"hcp_gft()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"hcp_gft object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"Zeileis , Leisch F, Kleiber C, Hornik K (2002). strucchange: R package testing structural change linear regression models. Journal Statistical Software, 7(2). doi:10.18637/jss.v007.i02 Zeileis , Kleiber C, Krämer W, Hornik K (2003). Testing dating structural changes practice. Computational Statistics & Data Analysis, 44(1):109–123.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure the GFT detector model <- hcp_gft()  # Fit the detector (no-op for GFT) model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 49  49  TRUE changepoint #> 64  64  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":null,"dir":"Reference","previous_headings":"","what":"Pruned Exact Linear Time (PELT) — hcp_pelt","title":"Pruned Exact Linear Time (PELT) — hcp_pelt","text":"Multiple change-point detection using PELT algorithm mean/variance linear-time cost suitable penalty choices. function wraps PELT implementation changepoint package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pruned Exact Linear Time (PELT) — hcp_pelt","text":"","code":"hcp_pelt()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pruned Exact Linear Time (PELT) — hcp_pelt","text":"hcp_pelt object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pruned Exact Linear Time (PELT) — hcp_pelt","text":"PELT performs optimal partitioning pruning candidate change-point locations achieve near-linear computational cost.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pruned Exact Linear Time (PELT) — hcp_pelt","text":"Killick R, Fearnhead P, Eckley IA (2012). Optimal detection changepoints linear computational cost. JASA, 107(500):1590–1598.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pruned Exact Linear Time (PELT) — hcp_pelt","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure the PELT detector model <- hcp_pelt()  # Fit the detector (no-op for PELT) model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 9    9  TRUE changepoint #> 19  19  TRUE changepoint #> 29  29  TRUE changepoint #> 39  39  TRUE changepoint #> 60  60  TRUE changepoint #> 71  71  TRUE changepoint #> 81  81  TRUE changepoint #> 91  91  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":null,"dir":"Reference","previous_headings":"","what":"Seminal change point — hcp_scp","title":"Seminal change point — hcp_scp","text":"Change-point detection related event/trend change detection. Seminal change point detects change points based deviations linear regression models adjusted without central observation sliding window <10.1145/312129.312190>.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seminal change point — hcp_scp","text":"","code":"hcp_scp(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seminal change point — hcp_scp","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seminal change point — hcp_scp","text":"hcp_scp object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seminal change point — hcp_scp","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seminal change point — hcp_scp","text":"","code":"library(daltoolbox)  # Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Configure seminal change-point detector model <- hcp_scp()  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected change points print(detection[(detection$event),]) #>    idx event        type #> 50  50  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Discord discovery using Matrix Profile — hdis_mp","title":"Discord discovery using Matrix Profile — hdis_mp","text":"Discovers rare, dissimilar subsequences (discords) using Matrix Profile implemented tsmp package doi:10.32614/RJ-2020-021.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discord discovery using Matrix Profile — hdis_mp","text":"","code":"hdis_mp(mode = \"stamp\", w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discord discovery using Matrix Profile — hdis_mp","text":"mode Character. Algorithm: one \"stomp\", \"stamp\", \"simple\", \"mstomp\", \"scrimp\", \"valmod\", \"pmp\". w Integer. Subsequence window size. qtd Integer. Number discords return (>= 3 recommended).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discord discovery using Matrix Profile — hdis_mp","text":"hdis_mp object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discord discovery using Matrix Profile — hdis_mp","text":"Yeh CCM, et al. (2016). Matrix Profile /II: -pairs similarity joins scalable time series motifs/discrod discovery. IEEE ICDM. Tavenard R, et al. tsmp: Matrix Profile R. R Journal (2020). doi:10.32614/RJ-2020-021","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discord discovery using Matrix Profile — hdis_mp","text":"","code":"library(daltoolbox)  # Load motif/discord example data data(examples_motifs)  # Use a simple sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # Configure discord discovery via Matrix Profile model <- hdis_mp(\"stamp\", 4, 3)  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie) #> Finished in 0.02 secs  # Show detected discords print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 47  47  TRUE motif   1      4 #> 53  53  TRUE motif   1      4 #> 72  72  TRUE motif   1      4 #> 78  78  TRUE motif   1      4"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_sax.html","id":null,"dir":"Reference","previous_headings":"","what":"Discord discovery using SAX — hdis_sax","title":"Discord discovery using SAX — hdis_sax","text":"Discord discovery using SAX doi:10.1007/s10618-007-0064-z","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_sax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discord discovery using SAX — hdis_sax","text":"","code":"hdis_sax(a, w, qtd = 2)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_sax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discord discovery using SAX — hdis_sax","text":"alphabet size w word size qtd number occurrences classified discords","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_sax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discord discovery using SAX — hdis_sax","text":"hdis_sax object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_sax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discord discovery using SAX — hdis_sax","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_sax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discord discovery using SAX — hdis_sax","text":"","code":"library(daltoolbox)  # Load motif/discord example data data(examples_motifs)  # Use a simple sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # Configure discord discovery via SAX model <- hdis_sax(26, 3, 3)  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected discords print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 17  17  TRUE motif BCE      3 #> 21  21  TRUE motif IKM      3 #> 39  39  TRUE motif CDE      3 #> 43  43  TRUE motif GJL      3 #> 64  64  TRUE motif GHI      3 #> 68  68  TRUE motif LOS      3 #> 86  86  TRUE motif ONM      3 #> 90  90  TRUE motif MOP      3 #> 94  94  TRUE motif VXX      3"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using Matrix Profile — hmo_mp","title":"Motif discovery using Matrix Profile — hmo_mp","text":"Discovers repeated subsequences (motifs) using Matrix Profile methods implemented tsmp package doi:10.32614/RJ-2020-021.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using Matrix Profile — hmo_mp","text":"","code":"hmo_mp(mode = \"stamp\", w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using Matrix Profile — hmo_mp","text":"mode Character. Algorithm: one \"stomp\", \"stamp\", \"simple\", \"mstomp\", \"scrimp\", \"valmod\", \"pmp\". w Integer. Subsequence window size. qtd Integer. Minimum number occurrences classify motif.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using Matrix Profile — hmo_mp","text":"hmo_mp object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Motif discovery using Matrix Profile — hmo_mp","text":"Yeh CCM, et al. (2016). Matrix Profile /II: -pairs similarity joins scalable time series motifs/discrod discovery. IEEE ICDM. Tavenard R, et al. tsmp: Matrix Profile R. R Journal (2020). doi:10.32614/RJ-2020-021","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using Matrix Profile — hmo_mp","text":"","code":"library(daltoolbox)  # Load motif example data data(examples_motifs)  # Use a simple sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # Configure motif discovery via Matrix Profile model <- hmo_mp(\"stamp\", 4, 3)  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie) #> Finished in 0.02 secs  # Show detected motifs print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 6    6  TRUE motif   3      4 #> 19  19  TRUE motif   2      4 #> 25  25  TRUE motif   1      4 #> 31  31  TRUE motif   3      4 #> 44  44  TRUE motif   2      4 #> 56  56  TRUE motif   3      4 #> 69  69  TRUE motif   2      4 #> 75  75  TRUE motif   1      4 #> 81  81  TRUE motif   3      4 #> 94  94  TRUE motif   2      4"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using SAX — hmo_sax","title":"Motif discovery using SAX — hmo_sax","text":"Discovers repeated subsequences (motifs) using Symbolic Aggregate approXimation (SAX) representation doi:10.1007/s10618-007-0064-z. Subsequences discretized grouped symbolic words; frequently occurring words indicate motifs.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using SAX — hmo_sax","text":"","code":"hmo_sax(a, w, qtd = 2)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using SAX — hmo_sax","text":"Integer. Alphabet size. w Integer. Word/window size. qtd Integer. Minimum number occurrences classify motif.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using SAX — hmo_sax","text":"hmo_sax object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Motif discovery using SAX — hmo_sax","text":"Lin J, Keogh E, Lonardi S, Chiu B (2007). symbolic representation time series, implications streaming algorithms. Data Mining Knowledge Discovery 15, 107–144.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using SAX — hmo_sax","text":"","code":"library(daltoolbox)  # Load motif example data data(examples_motifs)  # Use a simple sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # Configure SAX-based motif discovery model <- hmo_sax(26, 3, 3)  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected motifs print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 25  25  TRUE motif QST      3 #> 50  50  TRUE motif QST      3 #> 75  75  TRUE motif QST      3"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_xsax.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using XSAX — hmo_xsax","title":"Motif discovery using XSAX — hmo_xsax","text":"Discovers repeated subsequences (motifs) using extended SAX (XSAX) representation supports larger alphanumeric alphabet.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_xsax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using XSAX — hmo_xsax","text":"","code":"hmo_xsax(a, w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_xsax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using XSAX — hmo_xsax","text":"Integer. Alphabet size. w Integer. Word/window size. qtd Integer. Minimum number occurrences classified motifs.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_xsax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using XSAX — hmo_xsax","text":"hmo_xsax object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_xsax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Motif discovery using XSAX — hmo_xsax","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_xsax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using XSAX — hmo_xsax","text":"","code":"library(daltoolbox)  # Load motif example data data(examples_motifs)  # Use a simple sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # Configure XSAX-based motif discovery model <- hmo_xsax(37, 3, 3)  # Fit the model model <- fit(model, dataset$serie)  # Run detection detection <- detect(model, dataset$serie)  # Show detected motifs print(detection[(detection$event),]) #>    idx event  type    seq seqlen #> 25  25  TRUE motif 0N0P0R      3 #> 50  50  TRUE motif 0N0P0R      3 #> 75  75  TRUE motif 0N0P0R      3"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate anomaly detector using PCA — hmu_pca","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"Projects multivariate observations onto principal components flags large reconstruction errors anomalies. Based classical PCA.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"","code":"hmu_pca()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"hmu_pca object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"series standardized, PCA computed, data reconstructed principal components. reconstruction error summarized thresholded.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"Jolliffe (2002). Principal Component Analysis. Springer.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"","code":"library(daltoolbox)  # Load multivariate example data data(examples_harbinger)  # Use a multidimensional time series dataset <- examples_harbinger$multidimensional head(dataset) #>        serie           x event #> 1 -0.6264538  0.40940184 FALSE #> 2 -0.8356286  1.58658843 FALSE #> 3  1.5952808 -0.33090780 FALSE #> 4  0.3295078 -2.28523554 FALSE #> 5 -0.8204684  2.49766159 FALSE #> 6  0.5757814 -0.01339952 FALSE  # Configure PCA-based anomaly detector model <- hmu_pca()  # Fit the model (example uses first two columns) model <- fit(model, dataset[,1:2])  # Run detection detection <- detect(model, dataset[,1:2])  # Show detected anomalies print(detection[(detection$event),]) #>     idx event    type #> 17   17  TRUE anomaly #> 94   94  TRUE anomaly #> 101 101  TRUE anomaly #> 190 190  TRUE anomaly  # Evaluate detections evaluation <- evaluate(model, detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0     4     #> FALSE     1     195"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":null,"dir":"Reference","previous_headings":"","what":"Moving average smoothing — mas","title":"Moving average smoothing — mas","text":"mas() function returns simple moving average smoother provided time series.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moving average smoothing — mas","text":"","code":"mas(x, order)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moving average smoothing — mas","text":"x numeric vector univariate time series. order Order moving average smoother.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moving average smoothing — mas","text":"Numerical time series length length(x)-order+1 containing simple moving average smoothed values.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Moving average smoothing — mas","text":"moving average smoother transformation given $$(1/k) * ( x[t] + x[t+1] + ... + x[t+k-1] )$$ k=order, t assume values range 1:(n-k+1), n=length(x). See also ma forecast package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Moving average smoothing — mas","text":"R.H. Shumway D.S. Stoffer, 2010, Time Series Analysis Applications: R Examples. 3rd ed. 2011 edition ed. New York, Springer.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moving average smoothing — mas","text":"","code":"# Load change-point example data data(examples_changepoints)  # Use a simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # Compute a 5-point moving average ma <- mas(dataset$serie, 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":null,"dir":"Reference","previous_headings":"","what":"SAX transformation — trans_sax","title":"SAX transformation — trans_sax","text":"Symbolic Aggregate approXimation (SAX) discretization numeric time series. series z-normalized, quantile-binned, mapped alphabet size alpha.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SAX transformation — trans_sax","text":"","code":"trans_sax(alpha)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SAX transformation — trans_sax","text":"alpha Integer. Alphabet size (2–26).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SAX transformation — trans_sax","text":"trans_sax transformer object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SAX transformation — trans_sax","text":"Lin J, Keogh E, Lonardi S, Chiu B (2007). symbolic representation time series, implications streaming algorithms. Data Mining Knowledge Discovery 15, 107–144.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SAX transformation — trans_sax","text":"","code":"library(daltoolbox) vector <- 1:52 model <- trans_sax(alpha = 26) model <- fit(model, vector) xvector <- transform(model, vector) print(xvector) #>  [1] \"A\" \"A\" \"B\" \"B\" \"C\" \"C\" \"D\" \"D\" \"E\" \"E\" \"F\" \"F\" \"G\" \"G\" \"H\" \"H\" \"I\" \"I\" \"J\" #> [20] \"J\" \"K\" \"K\" \"L\" \"L\" \"M\" \"M\" \"N\" \"N\" \"O\" \"O\" \"P\" \"P\" \"Q\" \"Q\" \"R\" \"R\" \"S\" \"S\" #> [39] \"T\" \"T\" \"U\" \"U\" \"V\" \"V\" \"W\" \"W\" \"X\" \"X\" \"Y\" \"Y\" \"Z\" \"Z\""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":null,"dir":"Reference","previous_headings":"","what":"XSAX transformation — trans_xsax","title":"XSAX transformation — trans_xsax","text":"Extended SAX (XSAX) discretization using larger alphanumeric alphabet finer symbolic resolution.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"XSAX transformation — trans_xsax","text":"","code":"trans_xsax(alpha)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"XSAX transformation — trans_xsax","text":"alpha Integer. Alphabet size (2–36).","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"XSAX transformation — trans_xsax","text":"trans_xsax transformer object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"XSAX transformation — trans_xsax","text":"Ogasawara, E., Salles, R., Porto, F., Pacitti, E. Event Detection Time Series. 1st ed. Cham: Springer Nature Switzerland, 2025. doi:10.1007/978-3-031-75941-3","code":""},{"path":[]},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"XSAX transformation — trans_xsax","text":"","code":"library(daltoolbox) vector <- 1:52 model <- trans_xsax(alpha = 36) model <- fit(model, vector) xvector <- transform(model, vector) print(xvector) #>  [1] \"0\" \"0\" \"1\" \"2\" \"2\" \"3\" \"4\" \"4\" \"5\" \"6\" \"7\" \"7\" \"8\" \"9\" \"9\" \"A\" \"B\" \"B\" \"C\" #> [20] \"D\" \"E\" \"E\" \"F\" \"G\" \"G\" \"H\" \"I\" \"J\" \"J\" \"K\" \"L\" \"L\" \"M\" \"N\" \"N\" \"O\" \"P\" \"Q\" #> [39] \"Q\" \"R\" \"S\" \"S\" \"T\" \"U\" \"V\" \"V\" \"W\" \"X\" \"X\" \"Y\" \"Z\" \"Z\""}]
