[{"path":"https://cefet-rj-dal.github.io/harbinger/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 harbinger authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rebecca Salles. Author. Janio Lima. Author. Lais Baroni. Author. Antonio Castro. Author. Leonardo Carvalho. Author. Heraldo Borges. Author. Diego Carvalho. Author. Rafaelli Coutinho. Author. Eduardo Bezerra. Author. Esther Pacitti. Author. Fabio Porto. Author. Eduardo Ogasawara. Author, thesis advisor, maintainer. Federal Center Technological Education Rio de Janeiro (CEFET/RJ). Copyright holder.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Salles R, Lima J, Baroni L, Castro , Carvalho L, Borges H, Carvalho D, Coutinho R, Bezerra E, Pacitti E, Porto F, Ogasawara E (2023). harbinger: Unified Time Series Event Detection Framework. R package version 1.0.727, https://cefet-rj-dal.github.io/harbinger/, https://github.com/cefet-rj-dal/harbinger.","code":"@Manual{,   title = {harbinger: An Unified Time Series Event Detection Framework},   author = {Rebecca Salles and Janio Lima and Lais Baroni and Antonio Castro and Leonardo Carvalho and Heraldo Borges and Diego Carvalho and Rafaelli Coutinho and Eduardo Bezerra and Esther Pacitti and Fabio Porto and Eduardo Ogasawara},   year = {2023},   note = {R package version 1.0.727, https://cefet-rj-dal.github.io/harbinger/},   url = {https://github.com/cefet-rj-dal/harbinger}, }"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"id_-harbinger","dir":"","previous_headings":"","what":"An Unified Time Series Event Detection Framework","title":"An Unified Time Series Event Detection Framework","text":"Harbinger framework event detection time series. provides integrated environment time series anomaly detection, change points, motif discovery. provides broad range event detection methods functions plotting evaluating event detections. anomaly part, methods based machine learning model deviation (Conv1D, ELM, MLP, LSTM, Random Regression Forest, SVM), machine learning classification model (Decision Tree, KNN, MLP, Naive Bayes, Random Forest, SVM), clustering (kmeans DTW) statistical methods (ARIMA, FBIAD, GARCH). change points part, methods based linear regression, ARIMA, ETS, GARCH. motifs part, methods based Hash Matrix Profile. specific methods multivariate series. evaluation detections includes traditional soft computing. Harbinger architecture based Experiment Lines built top DAL Toolbox. organization makes easy customize add novel methods framework.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Unified Time Series Event Detection Framework","text":"latest version Harbinger CRAN available : https://CRAN.R-project.org/package=harbinger can install stable version Harbinger CRAN : can install development version Harbinger GitHub https://github.com/cefet-rj-dal/harbinger :","code":"install.packages(\"harbinger\") # install.packages(\"devtools\") library(devtools) devtools::install_github(\"cefet-rj-dal/harbinger\", force=TRUE, upgrade=\"never\")"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"An Unified Time Series Event Detection Framework","text":"Examples Harbinger available : https://nbviewer.org/github/cefet-rj-dal/harbinger-examples/tree/main/ organized according general functions, anomalies, change points, motifs, multivariate anomaly detection.","code":"library(harbinger) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo ## basic example code"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"bugs-and-new-features-request","dir":"","previous_headings":"","what":"Bugs and new features request","title":"An Unified Time Series Event Detection Framework","text":"https://github.com/cefet-rj-dal/harbinger/issues","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect events in time series — detect","title":"Detect events in time series — detect","text":"Event detection using fitted Harbinger model","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect events in time series — detect","text":"","code":"detect(obj, ...)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect events in time series — detect","text":"obj harbinger object ... optional arguments.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect events in time series — detect","text":"data frame index observations identified event, type","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect events in time series — detect","text":"","code":"# See ?hanc_ml for an example of anomaly detection using machine learning classification # See ?hanr_arima for an example of anomaly detection using ARIMA # See ?hanr_fbiad for an example of anomaly detection using FBIAD # See ?hanr_garch for an example of anomaly detection using GARCH # See ?hanr_kmeans for an example of anomaly detection using kmeans clustering # See ?hanr_ml for an example of anomaly detection using machine learning regression # See ?hanr_cf_arima for an example of change point detection using ARIMA # See ?hanr_cf_ets for an example of change point detection using ETS # See ?hanr_cf_lr for an example of change point detection using linear regression # See ?hanr_cf_garch for an example of change point detection using GARCH # See ?hanr_cf_scp for an example of change point detection using the seminal algorithm # See ?hmo_sax for an example of motif discovery using SAX # See ?hmu_pca for an example of anomaly detection in multivariate time series using PCA"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using autoencoder — han_autoencoder","title":"Anomaly detector using autoencoder — han_autoencoder","text":"Anomaly detector using autoencoder","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using autoencoder — han_autoencoder","text":"","code":"han_autoencoder(input_size, encode_size)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using autoencoder — han_autoencoder","text":"input_size Establish input size autoencoder anomaly detector. size output also. encode_size encode size autoencoder.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using autoencoder — han_autoencoder","text":"han_autoencoder object histogram based method detect anomalies time series. Bins smaller amount observations considered anomalies. Values first bin last bin also considered anomalies.>.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/han_autoencoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using autoencoder — han_autoencoder","text":"","code":"# setting up time series regression model #Use the same example of hanr_fbiad changing the constructor to: model <- han_autoencoder(3,1)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector based on machine learning classification — hanc_ml","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"Anomaly detection using daltoolbox classification. training test set used. training set must contain labeled events. set preconfigured classification methods described https://cefet-rj-dal.github.io/daltoolbox/. include: cla_majority, cla_dtree, cla_knn, cla_mlp, cla_nb, cla_rf, cla_svm","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"","code":"hanc_ml(model)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"model DALToolbox classification model","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"hanc_ml object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"","code":"library(daltoolbox) #>  #> Attaching package: ‘daltoolbox’ #> The following object is masked from ‘package:base’: #>  #>     transform  #loading the example database data(har_examples)  #Using example 17 dataset <- har_examples$example17 dataset$event <- factor(dataset$event, labels=c(\"FALSE\", \"TRUE\")) slevels <- levels(dataset$event)  # separating into training and test train <- dataset[1:80,] test <- dataset[-(1:80),]  # normalizing the data norm <- minmax() norm <- fit(norm, train) train_n <- transform(norm, train)  # establishing decision tree method model <- hanc_ml(cla_dtree(\"event\", slevels))  # fitting the model model <- fit(model, train_n)  # evaluating the detections during testing test_n <- transform(norm, test)  detection <- detect(model, test_n) print(detection[(detection$event),]) #>    idx event    type #> 9    9  TRUE anomaly #> 22  22  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using DTW — hanct_dtw","title":"Anomaly detector using DTW — hanct_dtw","text":"Anomaly detection using DTW DTW applied time series. seq equals one, observations distant closest centroids labeled anomalies. seq grater one, sequences distant closest centroids labeled discords. wraps tsclust presented dtwclust library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using DTW — hanct_dtw","text":"","code":"hanct_dtw(seq = 1, centers = NA)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using DTW — hanct_dtw","text":"seq sequence size centers number centroids","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using DTW — hanct_dtw","text":"hanct_dtw object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_dtw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using DTW — hanct_dtw","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanct_dtw()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using kmeans — hanct_kmeans","title":"Anomaly detector using kmeans — hanct_kmeans","text":"Anomaly detection using kmeans kmeans applied time series. seq equals one, observations distant closest centroids labeled anomalies. seq grater one, sequences distant closest centroids labeled discords. wraps kmeans presented stats library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using kmeans — hanct_kmeans","text":"","code":"hanct_kmeans(seq = 1, centers = NA)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using kmeans — hanct_kmeans","text":"seq sequence size centers number centroids","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using kmeans — hanct_kmeans","text":"hanct_kmeans object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanct_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using kmeans — hanct_kmeans","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanct_kmeans()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using ARIMA. — hanr_arima","title":"Anomaly detector using ARIMA. — hanr_arima","text":"Anomaly detection using ARIMA ARIMA model adjusts time series. Observations distant model labeled anomalies. wraps ARIMA model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using ARIMA. — hanr_arima","text":"","code":"hanr_arima()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using ARIMA. — hanr_arima","text":"hanr_arima object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using ARIMA. — hanr_arima","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_arima()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using FBIAD — hanr_fbiad","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"Anomaly detector using FBIAD","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"","code":"hanr_fbiad(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"sw_size Window size FBIAD","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"hanr_fbiad object Forward Backward Inertial Anomaly Detector (FBIAD) detects anomalies time series. Anomalies observations differ forward backward time series inertia doi:10.1109/IJCNN55064.2022.9892088.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fbiad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using FBIAD — hanr_fbiad","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_fbiad()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using GARCH — hanr_garch","title":"Anomaly detector using GARCH — hanr_garch","text":"Anomaly detection using GARCH GARCH model adjusts time series. Observations distant model labeled anomalies. wraps ugarch model presented rugarch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using GARCH — hanr_garch","text":"","code":"hanr_garch()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using GARCH — hanr_garch","text":"hanr_garch object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using GARCH — hanr_garch","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 14 dataset <- har_examples$example14 head(dataset) #>        serie event #> 1 -1.1597821 FALSE #> 2 -1.5782775 FALSE #> 3 -1.5653926 FALSE #> 4 -0.7182375 FALSE #> 5  0.6003753 FALSE #> 6  0.1899022 FALSE  # setting up time series regression model model <- hanr_garch()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>     idx event    type #> 169 169  TRUE anomaly #> 172 172  TRUE anomaly #> 183 183  TRUE anomaly #> 186 186  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using histogram — hanr_histogram","title":"Anomaly detector using histogram — hanr_histogram","text":"Anomaly detector using histogram","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using histogram — hanr_histogram","text":"","code":"hanr_histogram(density_threshold = 0.05)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using histogram — hanr_histogram","text":"density_threshold minimum frequency bin considered anomaly. Default value 5%.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using histogram — hanr_histogram","text":"hanr_histogram object histogram based method detect anomalies time series. Bins smaller amount observations considered anomalies. Values first bin last bin also considered anomalies.>.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using histogram — hanr_histogram","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_histogram()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 1    1  TRUE anomaly #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector based on machine learning regression. — hanr_ml","title":"Anomaly detector based on machine learning regression. — hanr_ml","text":"Anomaly detection using daltoolbox regression regression model adjusts time series. Observations distant model labeled anomalies. set preconfigured regression methods described https://cefet-rj-dal.github.io/daltoolbox/. include: ts_elm, ts_conv1d, ts_lstm, ts_mlp, ts_rf, ts_svm","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector based on machine learning regression. — hanr_ml","text":"","code":"hanr_ml(model, sw_size = 15)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector based on machine learning regression. — hanr_ml","text":"model DALToolbox regression model sw_size sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector based on machine learning regression. — hanr_ml","text":"hanr_ml object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector based on machine learning regression. — hanr_ml","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_ml(ts_elm(ts_norm_gminmax(), input_size=4, nhid=3, actfun=\"purelin\"))  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>       idx event    type #> NA     NA    NA    <NA> #> NA.1   NA    NA    <NA> #> NA.2   NA    NA    <NA> #> NA.3   NA    NA    <NA> #> NA.4   NA    NA    <NA> #> NA.5   NA    NA    <NA> #> NA.6   NA    NA    <NA> #> NA.7   NA    NA    <NA> #> NA.8   NA    NA    <NA> #> NA.9   NA    NA    <NA> #> NA.10  NA    NA    <NA> #> NA.11  NA    NA    <NA> #> NA.12  NA    NA    <NA> #> NA.13  NA    NA    <NA> #> 50     50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_conv1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Conv1D — har_conv1d","title":"Conv1D — har_conv1d","text":"Creates time series prediction object uses Conv1D. wraps pytorch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_conv1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conv1D — har_conv1d","text":"","code":"har_conv1d(preprocess = NA, input_size = NA, epochs = 10000L)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_conv1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conv1D — har_conv1d","text":"preprocess normalization input_size input size machine learning model epochs maximum number epochs","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_conv1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conv1D — har_conv1d","text":"har_conv1d object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_conv1d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conv1D — har_conv1d","text":"","code":"# \\donttest{ library(daltoolbox) data(sin_data) ts <- ts_data(sin_data$y, 10) ts_head(ts, 3) #>             t9        t8        t7        t6        t5        t4        t3 #> [1,] 0.0000000 0.2474040 0.4794255 0.6816388 0.8414710 0.9489846 0.9974950 #> [2,] 0.2474040 0.4794255 0.6816388 0.8414710 0.9489846 0.9974950 0.9839859 #> [3,] 0.4794255 0.6816388 0.8414710 0.9489846 0.9974950 0.9839859 0.9092974 #>             t2        t1        t0 #> [1,] 0.9839859 0.9092974 0.7780732 #> [2,] 0.9092974 0.7780732 0.5984721 #> [3,] 0.7780732 0.5984721 0.3816610  samp <- ts_sample(ts, test_size = 5) io_train <- ts_projection(samp$train) io_test <- ts_projection(samp$test)  model <- har_conv1d(ts_norm_gminmax(), input_size=4, epochs = 10000L) model <- fit(model, x=io_train$input, y=io_train$output) #> Error in py_run_file_impl(file, local, convert): ModuleNotFoundError: No module named 'torch' #> Run `reticulate::py_last_error()` for details.  prediction <- predict(model, x=io_test$input[1,], steps_ahead=5) #> Error in py_run_file_impl(file, local, convert): ModuleNotFoundError: No module named 'torch' #> Run `reticulate::py_last_error()` for details. prediction <- as.vector(prediction) #> Error in eval(expr, envir, enclos): object 'prediction' not found output <- as.vector(io_test$output)  ev_test <- evaluate(model, output, prediction) #> Error in eval(expr, envir, enclos): object 'prediction' not found ev_test #> Error in eval(expr, envir, enclos): object 'ev_test' not found # }"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of event detection — har_eval","title":"Evaluation of event detection — har_eval","text":"Evaluation event detection (traditional hard evaluation)","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of event detection — har_eval","text":"","code":"har_eval()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of event detection — har_eval","text":"har_eval object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of event detection — har_eval","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using the time series 14 dataset <- har_examples$example14 head(dataset) #>        serie event #> 1 -1.1597821 FALSE #> 2 -1.5782775 FALSE #> 3 -1.5653926 FALSE #> 4 -0.7182375 FALSE #> 5  0.6003753 FALSE #> 6  0.1899022 FALSE  # setting up time change point using GARCH model <- hcp_garch()  # fitting the model model <- fit(model, dataset$serie)  # making detections detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>     idx event        type #> 102 102  TRUE changepoint #> 172 172  TRUE changepoint  # evaluating the detections evaluation <- evaluate(har_eval(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0     2     #> FALSE     1     197    # ploting the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf) #> Don't know how to automatically pick scale for object of type <ts>. Defaulting #> to continuous."},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of event detection — har_eval_soft","title":"Evaluation of event detection — har_eval_soft","text":"Evaluation event detection using SoftED doi:10.48550/arXiv.2304.00439","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of event detection — har_eval_soft","text":"","code":"har_eval_soft(sw_size = 15)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of event detection — har_eval_soft","text":"sw_size tolerance window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of event detection — har_eval_soft","text":"har_eval_soft object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of event detection — har_eval_soft","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using the time series 14 dataset <- har_examples$example14 head(dataset) #>        serie event #> 1 -1.1597821 FALSE #> 2 -1.5782775 FALSE #> 3 -1.5653926 FALSE #> 4 -0.7182375 FALSE #> 5  0.6003753 FALSE #> 6  0.1899022 FALSE  # setting up time change point using GARCH model <- hcp_garch()  # fitting the model model <- fit(model, dataset$serie)  # making detections detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>     idx event        type #> 102 102  TRUE changepoint #> 172 172  TRUE changepoint  # evaluating the detections evaluation <- evaluate(har_eval_soft(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event        #> detection TRUE  FALSE  #> TRUE      0.87  1.13   #> FALSE     0.13  197.87  # ploting the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf) #> Don't know how to automatically pick scale for object of type <ts>. Defaulting #> to continuous."},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic time series for event detection — har_examples","title":"Synthetic time series for event detection — har_examples","text":"list univariate time series event detection example1: single (uncommon value) anomaly example stationary time series example2: single (common value) anomaly example stationary time series example3: single anomaly example trend time series example4: change point time series example5: change point anomaly (uncommon value) time series example6: change point anomaly (common value) time series example7: change point anomaly (uncommon value) seasonal time series example8: change point anomaly (common value) seasonal time series example9: multi behavior time series (1-200: stationary, 201-400: trend, 401-600: structural break; 601-800: heteroscedasticity, 801:1000 random walk) example10: multiple anomalies example11: stationary time series example12: trend time series example13: structural break example14: heterocedasticity example15: motif example16: discord example17: repetitive anomaly example18: repetitive anomaly #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic time series for event detection — har_examples","text":"","code":"data(har_examples)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic time series for event detection — har_examples","text":"list time series.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Synthetic time series for event detection — har_examples","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Synthetic time series for event detection — har_examples","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic time series for event detection — har_examples","text":"","code":"data(har_examples) serie <- har_examples$example1"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic time series for event detection — har_examples_multi","title":"Synthetic time series for event detection — har_examples_multi","text":"list multivariate time series event detection example1: single multivariate anomaly #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic time series for event detection — har_examples_multi","text":"","code":"data(har_examples_multi)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples_multi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic time series for event detection — har_examples_multi","text":"list multivariate time series.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples_multi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Synthetic time series for event detection — har_examples_multi","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples_multi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Synthetic time series for event detection — har_examples_multi","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_examples_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic time series for event detection — har_examples_multi","text":"","code":"data(har_examples_multi) serie <- har_examples_multi$example1"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_lstm.html","id":null,"dir":"Reference","previous_headings":"","what":"LSTM — har_lstm","title":"LSTM — har_lstm","text":"Creates time series prediction object uses LSTM. wraps pytorch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_lstm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LSTM — har_lstm","text":"","code":"har_lstm(preprocess = NA, input_size = NA, epochs = 10000L)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_lstm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LSTM — har_lstm","text":"preprocess normalization input_size input size machine learning model epochs maximum number epochs","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_lstm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LSTM — har_lstm","text":"har_lstm object.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_lstm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LSTM — har_lstm","text":"","code":"# \\donttest{ library(daltoolbox) data(sin_data) ts <- ts_data(sin_data$y, 10) ts_head(ts, 3) #>             t9        t8        t7        t6        t5        t4        t3 #> [1,] 0.0000000 0.2474040 0.4794255 0.6816388 0.8414710 0.9489846 0.9974950 #> [2,] 0.2474040 0.4794255 0.6816388 0.8414710 0.9489846 0.9974950 0.9839859 #> [3,] 0.4794255 0.6816388 0.8414710 0.9489846 0.9974950 0.9839859 0.9092974 #>             t2        t1        t0 #> [1,] 0.9839859 0.9092974 0.7780732 #> [2,] 0.9092974 0.7780732 0.5984721 #> [3,] 0.7780732 0.5984721 0.3816610  samp <- ts_sample(ts, test_size = 5) io_train <- ts_projection(samp$train) io_test <- ts_projection(samp$test)  model <- har_lstm(ts_norm_gminmax(), input_size=4, epochs = 10000L) model <- fit(model, x=io_train$input, y=io_train$output) #> Error in py_run_file_impl(file, local, convert): ModuleNotFoundError: No module named 'torch' #> Run `reticulate::py_last_error()` for details.  prediction <- predict(model, x=io_test$input[1,], steps_ahead=5) #> Error in py_run_file_impl(file, local, convert): ModuleNotFoundError: No module named 'torch' #> Run `reticulate::py_last_error()` for details. prediction <- as.vector(prediction) #> Error in eval(expr, envir, enclos): object 'prediction' not found output <- as.vector(io_test$output)  ev_test <- evaluate(model, output, prediction) #> Error in eval(expr, envir, enclos): object 'prediction' not found ev_test #> Error in eval(expr, envir, enclos): object 'ev_test' not found # }"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot event detection on a time series — har_plot","title":"Plot event detection on a time series — har_plot","text":"accepts harbinger, time series, data.frame events, parameter mark detected change points, threshold y-axis index time series","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot event detection on a time series — har_plot","text":"","code":"har_plot(   obj,   serie,   detection,   event = NULL,   mark.cp = TRUE,   ylim = NULL,   idx = NULL,   pointsize = 0.5,   colors = c(\"green\", \"blue\", \"red\", \"purple\") )"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot event detection on a time series — har_plot","text":"obj harbinger detector serie time series detection detection event events mark.cp show change points ylim limits y-axis idx labels x observations pointsize default point size colors default colors event detection: green TP, blue FN, red FP, purple means observations part sequence.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot event detection on a time series — har_plot","text":"time series plot marked events","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot event detection on a time series — har_plot","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using the time series 1 dataset <- har_examples$example1 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time change point using GARCH model <- hanr_arima()  # fitting the model model <- fit(model, dataset$serie)  # making detections detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly  # evaluating the detections evaluation <- evaluate(har_eval_soft(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      1     0     #> FALSE     0     100    # ploting the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger — harbinger","title":"Harbinger — harbinger","text":"Ancestor class time series event detection","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger — harbinger","text":"","code":"harbinger()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger — harbinger","text":"Harbinger object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger — harbinger","text":"","code":"# See ?hanc_ml for an example of anomaly detection using machine learning classification # See ?hanr_arima for an example of anomaly detection using ARIMA # See ?hanr_fbiad for an example of anomaly detection using FBIAD # See ?hanr_garch for an example of anomaly detection using GARCH # See ?hanr_kmeans for an example of anomaly detection using kmeans clustering # See ?hanr_ml for an example of anomaly detection using machine learning regression # See ?hanr_cf_arima for an example of change point detection using ARIMA # See ?hanr_cf_ets for an example of change point detection using ETS # See ?hanr_cf_lr for an example of change point detection using linear regression # See ?hanr_cf_garch for an example of change point detection using GARCH # See ?hanr_cf_scp for an example of change point detection using the seminal algorithm # See ?hmo_sax for an example of motif discovery using SAX # See ?hmu_pca for an example of anomaly detection in multivariate time series using PCA"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":null,"dir":"Reference","previous_headings":"","what":"At most one change (AMOC) method — hcp_amoc","title":"At most one change (AMOC) method — hcp_amoc","text":"Change-point detection method focus identify one change point mean/variance doi:10.1093/biomet/57.1.1. wraps amoc implementation available changepoint library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"At most one change (AMOC) method — hcp_amoc","text":"","code":"hcp_amoc()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"At most one change (AMOC) method — hcp_amoc","text":"hcp_amoc object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"At most one change (AMOC) method — hcp_amoc","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_amoc()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 84  84  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary segmentation (BinSeg) method — hcp_binseg","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"Change-point detection method focus identify change points mean/variance doi:10.2307/2529204. wraps BinSeg implementation available changepoint library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"","code":"hcp_binseg(Q = 2)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"Q maximum number change-points search using BinSeg method","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"hcp_binseg object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_binseg()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie) #> Warning: The number of changepoints identified is Q, it is advised to increase Q to make sure changepoints have not been missed.  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 20  20  TRUE changepoint #> 85  85  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using ARIMA — hcp_cf_arima","title":"Change Finder using ARIMA — hcp_cf_arima","text":"Change-point detection related event/trend change detection. Change Finder ARIMA detects change points based deviations relative ARIMA model doi:10.1109/TKDE.2006.1599387. wraps ARIMA model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using ARIMA — hcp_cf_arima","text":"","code":"hcp_cf_arima(sw_size = NULL)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using ARIMA — hcp_cf_arima","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using ARIMA — hcp_cf_arima","text":"hcp_cf_arima object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using ARIMA — hcp_cf_arima","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_cf_arima()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 50  50  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using ETS — hcp_cf_ets","title":"Change Finder using ETS — hcp_cf_ets","text":"Change-point detection related event/trend change detection. Change Finder ETS detects change points based deviations relative trend component (T), seasonal component (S), error term (E) model doi:10.1109/TKDE.2006.1599387. wraps ETS model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using ETS — hcp_cf_ets","text":"","code":"hcp_cf_ets(sw_size = 7)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using ETS — hcp_cf_ets","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using ETS — hcp_cf_ets","text":"hcp_cf_ets object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using ETS — hcp_cf_ets","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_cf_ets()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 15  15  TRUE     anomaly #> 50  50  TRUE changepoint #> 57  57  TRUE     anomaly #> 61  61  TRUE     anomaly #> 69  69  TRUE     anomaly #> 77  77  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using LR — hcp_cf_lr","title":"Change Finder using LR — hcp_cf_lr","text":"Change-point detection related event/trend change detection. Change Finder LR detects change points based deviations relative linear regression model doi:10.1109/TKDE.2006.1599387.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using LR — hcp_cf_lr","text":"","code":"hcp_cf_lr(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using LR — hcp_cf_lr","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using LR — hcp_cf_lr","text":"hcp_cf_lr object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using LR — hcp_cf_lr","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_cf_lr()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":null,"dir":"Reference","previous_headings":"","what":"Chow test method — hcp_chow","title":"Chow test method — hcp_chow","text":"Change-point detection method focus identifying structural changes  doi:10.18637/jss.v007.i02. wraps Fstats breakpoints implementation available strucchange library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chow test method — hcp_chow","text":"","code":"hcp_chow()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chow test method — hcp_chow","text":"hcp_chow object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chow test method — hcp_chow","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_chow()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 50  50  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using GARCH — hcp_garch","title":"Change Finder using GARCH — hcp_garch","text":"Change-point detection related event/trend change detection. Change Finder GARCH detects change points based deviations relative linear regression model doi:10.1109/TKDE.2006.1599387. wraps GARCH model presented rugarch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using GARCH — hcp_garch","text":"","code":"hcp_garch(sw_size = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using GARCH — hcp_garch","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using GARCH — hcp_garch","text":"hcp_garch object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using GARCH — hcp_garch","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 14 dataset <- har_examples$example14 head(dataset) #>        serie event #> 1 -1.1597821 FALSE #> 2 -1.5782775 FALSE #> 3 -1.5653926 FALSE #> 4 -0.7182375 FALSE #> 5  0.6003753 FALSE #> 6  0.1899022 FALSE  # setting up time series regression model model <- hcp_garch()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>     idx event        type #> 102 102  TRUE changepoint #> 172 172  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":null,"dir":"Reference","previous_headings":"","what":"Pruned exact linear time (PELT) method — hcp_pelt","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"Change-point detection method focus identifying multiple exact change points mean/variance doi:10.1080/01621459.2012.737745. wraps BinSeg implementation available changepoint library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"","code":"hcp_pelt()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"hcp_pelt object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_pelt()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 10  10  TRUE changepoint #> 20  20  TRUE changepoint #> 30  30  TRUE changepoint #> 40  40  TRUE changepoint #> 59  59  TRUE changepoint #> 69  69  TRUE changepoint #> 80  80  TRUE changepoint #> 91  91  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":null,"dir":"Reference","previous_headings":"","what":"Seminal change point — hcp_scp","title":"Seminal change point — hcp_scp","text":"Change-point detection related event/trend change detection. Seminal change point detects change points based deviations linear regression models adjusted without central observation sliding window <10.1145/312129.312190>.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seminal change point — hcp_scp","text":"","code":"hcp_scp(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seminal change point — hcp_scp","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seminal change point — hcp_scp","text":"hcp_scp object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_scp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seminal change point — hcp_scp","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 6 dataset <- har_examples$example6 head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up time series regression model model <- hcp_scp()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 50  50  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_base36.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using base36 — hmo_base36","title":"Motif discovery using base36 — hmo_base36","text":"Motif discovery using base36 doi:10.1007/s10618-007-0064-z","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_base36.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using base36 — hmo_base36","text":"","code":"hmo_base36(a, w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_base36.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using base36 — hmo_base36","text":"alphabet size w word size qtd number occurrences classified motifs","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_base36.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using base36 — hmo_base36","text":"hmo_base36 object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_base36.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using base36 — hmo_base36","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 15 dataset <- har_examples$example15 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # setting up time series regression model model <- hmo_base36(37, 3, 3)  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event  type    seq seqlen #> 25  25  TRUE motif 0N0P0R      3 #> 50  50  TRUE motif 0N0P0R      3 #> 75  75  TRUE motif 0N0P0R      3"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using Matrix Profile — hmo_mp","title":"Motif discovery using Matrix Profile — hmo_mp","text":"Motif discovery using Matrix Profile doi:10.32614/RJ-2020-021","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using Matrix Profile — hmo_mp","text":"","code":"hmo_mp(mode = \"stamp\", w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using Matrix Profile — hmo_mp","text":"mode mode computing distance sequences. Available options include: \"stomp\", \"stamp\", \"simple\", \"mstomp\", \"scrimp\", \"valmod\", \"pmp\" w word size qtd number occurrences classified motifs","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using Matrix Profile — hmo_mp","text":"hmo_mp object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using Matrix Profile — hmo_mp","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 15 dataset <- har_examples$example15 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # setting up time series regression model model <- hmo_mp(\"stamp\", 4, 3)  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie) #> Finished in 0.07 secs  # filtering detected events print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 25  25  TRUE motif   1      4 #> 31  31  TRUE motif   3      4 #> 56  56  TRUE motif   3      4 #> 69  69  TRUE motif   2      4 #> 75  75  TRUE motif   1      4 #> 94  94  TRUE motif   2      4"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using SAX — hmo_sax","title":"Motif discovery using SAX — hmo_sax","text":"Motif discovery using SAX doi:10.1007/s10618-007-0064-z","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using SAX — hmo_sax","text":"","code":"hmo_sax(a, w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using SAX — hmo_sax","text":"alphabet size w word size qtd number occurrences classified motifs","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using SAX — hmo_sax","text":"hmo_sax object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_sax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using SAX — hmo_sax","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples)  #Using example 15 dataset <- har_examples$example15 head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # setting up time series regression model model <- hmo_sax(26, 3, 3)  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 25  25  TRUE motif QST      3 #> 50  50  TRUE motif QST      3 #> 75  75  TRUE motif QST      3"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate anomaly detector using PCA — hmu_pca","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"Multivariate anomaly detector using PCA doi:10.1016/0098-3004(93)90090-R","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"","code":"hmu_pca()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"hmu_pca object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"","code":"library(daltoolbox)  #loading the example database data(har_examples_multi)  #Using the time series 9 dataset <- har_examples_multi$example1 head(dataset) #>          x y event #> 1 1.080605 1 FALSE #> 2 1.114045 0 FALSE #> 3 1.147040 1 FALSE #> 4 1.179576 0 FALSE #> 5 1.211640 1 FALSE #> 6 1.243220 0 FALSE  # establishing hmu_pca method model <- hmu_pca()  # fitting the model using the two columns of the dataset model <- fit(model, dataset[,1:2])  # making detections using hmu_pca detection <- detect(model, dataset[,1:2])  # filtering detected events print(detection[(detection$event),]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)  # evaluating the detections evaluation <- evaluate(model, detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0     0     #> FALSE     1     100"}]
