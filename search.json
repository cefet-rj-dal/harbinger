[{"path":"https://cefet-rj-dal.github.io/harbinger/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 harbinger authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eduardo Ogasawara. Author, thesis advisor, maintainer. Antonio Castro. Author. Antonio Mello. Author. Ellen Paixão. Author. Fernando Fraga. Author. Heraldo Borges. Author. Janio Lima. Author. Jessica Souza. Author. Lais Baroni. Author. Lucas Tavares. Author. Michel Reis. Author. Rebecca Salles. Author. Diego Carvalho. Contributor. Eduardo Bezerra. Contributor. Rafaelli Coutinho. Contributor. Esther Pacitti. Contributor. Fabio Porto. Contributor. CEFET/RJ. Copyright holder.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ogasawara E, Castro , Mello , Paixão E, Fraga F, Borges H, Lima J, Souza J, Baroni L, Tavares L, Reis M, Salles R (2025). harbinger: Unified Time Series Event Detection Framework. R package version 1.2.717, https://cefet-rj-dal.github.io/harbinger/.","code":"@Manual{,   title = {harbinger: A Unified Time Series Event Detection Framework},   author = {Eduardo Ogasawara and Antonio Castro and Antonio Mello and Ellen Paixão and Fernando Fraga and Heraldo Borges and Janio Lima and Jessica Souza and Lais Baroni and Lucas Tavares and Michel Reis and Rebecca Salles},   year = {2025},   note = {R package version 1.2.717},   url = {https://cefet-rj-dal.github.io/harbinger/}, }"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"id_-harbinger","dir":"","previous_headings":"","what":"A Unified Time Series Event Detection Framework","title":"A Unified Time Series Event Detection Framework","text":"Harbinger framework event detection time series. provides integrated environment anomaly detection, change point detection, motif discovery. Harbinger offers broad range methods functions plotting evaluating detected events. anomaly detection, methods based : - Machine learning model deviation: Conv1D, ELM, MLP, LSTM, Random Regression Forest, SVM - Classification models: Decision Tree, KNN, MLP, Naive Bayes, Random Forest, SVM - Clustering: k-means DTW - Statistical techniques: ARIMA, FBIAD, GARCH change point detection, Harbinger includes: - Linear regression, ARIMA, ETS, GARCH-based approaches - Classic methods AMOC, ChowTest, Binary Segmentation (BinSeg), GFT, PELT motif discovery, provides: - Methods based Hashing Matrix Profile Harbinger also supports multivariate time series analysis event evaluation using traditional soft computing metrics. architecture Harbinger based Experiment Lines built top DAL Toolbox. design makes easy extend integrate new methods framework.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Unified Time Series Event Detection Framework","text":"latest version Harbinger available CRAN: can install development version GitHub:","code":"#install.packages\"harbinger\") library(devtools) devtools::install_github(\"cefet-rj-dal/harbinger\", force = TRUE, upgrade = \"never\")"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"A Unified Time Series Event Detection Framework","text":"Examples Harbinger organized application area: General Anomalies Change points Motifs","code":"library(harbinger) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo #> Registered S3 methods overwritten by 'forecast': #>   method  from  #>   head.ts stats #>   tail.ts stats  #loading the example database data(examples_anomalies)  #model model <- harbinger()  #stub detector detection <- detect(model, examples_anomalies$simple$serie)  # filtering detected events library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union print(detection |> dplyr::filter(event==TRUE)) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/index.html","id":"bug-reports-and-feature-requests","dir":"","previous_headings":"","what":"Bug reports and feature requests","title":"A Unified Time Series Event Detection Framework","text":"find bugs like suggest new features, please submit issue : https://github.com/cefet-rj-dal/harbinger/issues","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect events in time series — detect","title":"Detect events in time series — detect","text":"Event detection using fitted Harbinger model","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect events in time series — detect","text":"","code":"detect(obj, ...)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect events in time series — detect","text":"obj harbinger object ... optional arguments.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect events in time series — detect","text":"data frame index observations identified event, type","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect events in time series — detect","text":"","code":"#See examples of detectors for anomalies, change points, and motifs #at https://cefet-rj-dal.github.io/harbinger"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for anomaly detection — examples_anomalies","title":"Time series for anomaly detection — examples_anomalies","text":"list time series anomaly detection simple: simple synthetic time series contextual: contextual synthetic time series simple: trend synthetic time series trend: simple synthetic time series multiple: multiple anomalies synthetic time series sequence: sequence synthetic time series tt: train-test synthetic time series tt_warped: warped train-test synthetic time series #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for anomaly detection — examples_anomalies","text":"","code":"data(examples_anomalies)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for anomaly detection — examples_anomalies","text":"list time series anomaly detection.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for anomaly detection — examples_anomalies","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for anomaly detection — examples_anomalies","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_anomalies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for anomaly detection — examples_anomalies","text":"","code":"data(examples_anomalies) serie <- examples_anomalies$simple"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for change point detection — examples_changepoints","title":"Time series for change point detection — examples_changepoints","text":"list time series change point simple: simple synthetic time series sinusoidal: sinusoidal synthetic time series incremental: incremental synthetic time series abrupt: abrupt synthetic time series volatility: volatility synthetic time series #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for change point detection — examples_changepoints","text":"","code":"data(examples_changepoints)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for change point detection — examples_changepoints","text":"list time series change point detection.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for change point detection — examples_changepoints","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for change point detection — examples_changepoints","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_changepoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for change point detection — examples_changepoints","text":"","code":"data(examples_changepoints) serie <- examples_changepoints$simple"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for event detection — examples_harbinger","title":"Time series for event detection — examples_harbinger","text":"list time series event detection nonstationarity: synthetic nonstationarity time series global_temperature_yearly: yearly global temperature world global_temperature_monthly: monthly global temperature world multidimensional: multidimensional time series change point seattle_week: Seattle weakly temperature 2019 seattle_daily: Seattle daily temperature 2019 #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for event detection — examples_harbinger","text":"","code":"data(examples_harbinger)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for event detection — examples_harbinger","text":"list time series.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for event detection — examples_harbinger","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for event detection — examples_harbinger","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_harbinger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for event detection — examples_harbinger","text":"","code":"data(examples_harbinger) serie <- examples_harbinger$seattle_daily"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series for change point detection — examples_motifs","title":"Time series for change point detection — examples_motifs","text":"list time series change point simple: simple synthetic time series mitdb100: sample mitdb 100 time series mitdb102: sample mitdb 102 time series #'","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series for change point detection — examples_motifs","text":"","code":"data(examples_motifs)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series for change point detection — examples_motifs","text":"list time series motif discovery.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series for change point detection — examples_motifs","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time series for change point detection — examples_motifs","text":"Harbinger package","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/examples_motifs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series for change point detection — examples_motifs","text":"","code":"data(examples_motifs) serie <- examples_motifs$simple"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector based on machine learning classification — hanc_ml","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"Anomaly detection using daltoolbox classification. training test set used. training set must contain labeled events. set preconfigured classification methods described https://cefet-rj-dal.github.io/daltoolbox/. include: cla_majority, cla_dtree, cla_knn, cla_mlp, cla_nb, cla_rf, cla_svm","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"","code":"hanc_ml(model, threshold = 0.5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"model DALToolbox classification model threshold threshold classification","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"hanc_ml object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanc_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector based on machine learning classification — hanc_ml","text":"","code":"library(daltoolbox) #>  #> Attaching package: ‘daltoolbox’ #> The following object is masked from ‘package:base’: #>  #>     transform  #loading the example database data(examples_anomalies)  #Using example tt dataset <- examples_anomalies$tt dataset$event <- factor(dataset$event, labels=c(\"FALSE\", \"TRUE\")) slevels <- levels(dataset$event)  # separating into training and test train <- dataset[1:80,] test <- dataset[-(1:80),]  # normalizing the data norm <- minmax() norm <- fit(norm, train) train_n <- daltoolbox::transform(norm, train)  # establishing decision tree method model <- hanc_ml(cla_dtree(\"event\", slevels))  # fitting the model model <- fit(model, train_n)  # evaluating the detections during testing test_n <- daltoolbox::transform(norm, test)  detection <- detect(model, test_n) print(detection[(detection$event),]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using ARIMA. — hanr_arima","title":"Anomaly detector using ARIMA. — hanr_arima","text":"Anomaly detection using ARIMA ARIMA model adjusts time series. Observations distant model labeled anomalies. wraps ARIMA model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using ARIMA. — hanr_arima","text":"","code":"hanr_arima()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using ARIMA. — hanr_arima","text":"hanr_arima object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using ARIMA. — hanr_arima","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_arima()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using EMD — hanr_emd","title":"Anomaly detector using EMD — hanr_emd","text":"Anomaly detection using EMD EMD model adjusts time series. Observations distant model labeled anomalies. wraps EMD model presented hht library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using EMD — hanr_emd","text":"","code":"hanr_emd(noise = 0.1, trials = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using EMD — hanr_emd","text":"noise nosie trials trials","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using EMD — hanr_emd","text":"hanr_emd object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using EMD — hanr_emd","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series emd detector model <- hanr_emd()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using FFT — hanr_fft","title":"Anomaly detector using FFT — hanr_fft","text":"Anomaly detection using FFT FFT model adjusts time series. Observations distant model labeled anomalies. wraps FFT model presented stats library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using FFT — hanr_fft","text":"","code":"hanr_fft()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using FFT — hanr_fft","text":"hanr_fft object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using FFT — hanr_fft","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"function implements anomaly detection method uses Fast Fourier daltoolbox::transform (FFT) combined automatic frequency cutoff strategy based AMOC (One Change) algorithm. model analyzes power spectrum time series detects optimal cutoff frequency — point frequency content significantly changes — using changepoint detection method changepoint package. frequencies cutoff removed spectrum, inverse FFT reconstructs filtered version original signal preserves high-frequency components. resulting residual signal analyzed identify anomalous patterns based distance expected behavior. function extends HARBINGER framework returns object class hanr_fft_amoc.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"","code":"hanr_fft_amoc()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"hanr_fft_amoc object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with AMOC Cutoff — hanr_fft_amoc","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft_amoc()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"function implements anomaly detection method based Fast Fourier daltoolbox::transform (FFT) changepoint-based cutoff strategy using AMOC (One Change) algorithm applied cumulative sum (CUSUM) power spectrum. method first computes FFT input time series extracts power spectrum. applies CUSUM transformation spectral data emphasize gradual changes shifts spectral energy. Using AMOC algorithm, detects single changepoint CUSUM-transformed spectrum, serves cutoff index remove lower-frequency components. remaining high-frequency components reconstructed time-domain signal via inverse FFT, effectively isolating rapid local deviations. Anomalies detected evaluating distance filtered signal original series, highlighting points deviate significantly expected pattern. method suitable series spectral shifts subtle single significant change behavior expected. function extends HARBINGER framework returns object class hanr_fft_amoc_cusum.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"","code":"hanr_fft_amoc_cusum()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"hanr_fft_amoc_cusum object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_amoc_cusum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with AMOC and CUSUM Cutoff — hanr_fft_amoc_cusum","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft_amoc_cusum()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"function implements anomaly detection method combines Fast Fourier daltoolbox::transform (FFT) spectral cutoff strategy based Binary Segmentation (BinSeg) algorithm changepoint detection. method analyzes power spectrum input time series applies BinSeg algorithm identify changepoint spectral density, corresponding shift frequency content. Frequencies changepoint considered part underlying trend noise removed signal. modified spectrum transformed back time domain via inverse FFT, resulting high-pass filtered version series. Anomalies identified measuring distance original filtered signal, highlighting unusual deviations dominant signal behavior. function part HARBINGER framework returns object class hanr_fft_binseg.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"","code":"hanr_fft_binseg()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"hanr_fft_binseg object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with Binary Segmentation Cutoff — hanr_fft_binseg","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft_binseg()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"function implements anomaly detection method combines Fast Fourier daltoolbox::transform (FFT) changepoint-based cutoff strategy using Binary Segmentation (BinSeg) method applied cumulative sum (CUSUM) frequency spectrum. method first computes FFT input time series obtains power spectrum. , applies CUSUM transformation spectral density enhance detection gradual transitions accumulated changes energy across frequencies. Binary Segmentation method applied CUSUM-transformed spectrum identify changepoint defines cutoff frequency. Frequencies cutoff removed spectrum, signal reconstructed using inverse FFT. produces filtered signal retains high-frequency components, emphasizing potential anomalies. Anomalies detected measuring deviation filtered signal original one, applying outlier detection mechanism based residual. function extends HARBINGER framework returns object class hanr_fft_binseg_cusum.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"","code":"hanr_fft_binseg_cusum()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"hanr_fft_binseg_cusum object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_fft_binseg_cusum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly Detector using FFT with BinSeg and CUSUM Cutoff — hanr_fft_binseg_cusum","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_fft_binseg_cusum()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using GARCH — hanr_garch","title":"Anomaly detector using GARCH — hanr_garch","text":"Anomaly detection using GARCH GARCH model adjusts time series. Observations distant model labeled anomalies. wraps ugarch model presented rugarch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using GARCH — hanr_garch","text":"","code":"hanr_garch()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using GARCH — hanr_garch","text":"hanr_garch object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_garch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using GARCH — hanr_garch","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_garch()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using histogram — hanr_histogram","title":"Anomaly detector using histogram — hanr_histogram","text":"Anomaly detector using histogram","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using histogram — hanr_histogram","text":"","code":"hanr_histogram(density_threshold = 0.05)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using histogram — hanr_histogram","text":"density_threshold minimum frequency bin considered anomaly. Default value 5%.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using histogram — hanr_histogram","text":"hanr_histogram object histogram based method detect anomalies time series. Bins smaller amount observations considered anomalies. Values first bin last bin also considered anomalies.>.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using histogram — hanr_histogram","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series regression model model <- hanr_histogram()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 1    1  TRUE anomaly #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_red.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly and change point detector using RED — hanr_red","title":"Anomaly and change point detector using RED — hanr_red","text":"Anomaly change point detection using RED RED model adjusts time series. Observations distant model labeled anomalies. wraps EMD model presented hht library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_red.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly and change point detector using RED — hanr_red","text":"","code":"hanr_red(sw_size = 30, noise = 0.001, trials = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_red.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly and change point detector using RED — hanr_red","text":"sw_size sliding window size (default 30) noise noise trials trials","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_red.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly and change point detector using RED — hanr_red","text":"hanr_red object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_red.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly and change point detector using RED — hanr_red","text":"","code":"library(daltoolbox) library(zoo) #>  #> Attaching package: ‘zoo’ #> The following objects are masked from ‘package:base’: #>  #>     as.Date, as.Date.numeric  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series emd detector model <- hanr_red()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":null,"dir":"Reference","previous_headings":"","what":"Anomaly detector using Wavelet — hanr_wavelet","title":"Anomaly detector using Wavelet — hanr_wavelet","text":"Anomaly detection using Wavelet Wavelet model adjusts time series. Observations distant model labeled anomalies. wraps Wavelet model presented stats library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anomaly detector using Wavelet — hanr_wavelet","text":"","code":"hanr_wavelet(filter = \"haar\")"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anomaly detector using Wavelet — hanr_wavelet","text":"filter Availables wavelet filters: haar, d4, la8, bl14, c6","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anomaly detector using Wavelet — hanr_wavelet","text":"hanr_wavelet object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hanr_wavelet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anomaly detector using Wavelet — hanr_wavelet","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series fft detector model <- hanr_wavelet()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger Ensemble — har_ensemble","title":"Harbinger Ensemble — har_ensemble","text":"Ensemble detector","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger Ensemble — har_ensemble","text":"","code":"har_ensemble(...)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harbinger Ensemble — har_ensemble","text":"... list detectors","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger Ensemble — har_ensemble","text":"Harbinger object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_ensemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger Ensemble — har_ensemble","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using simple example dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time series emd detector model <- har_ensemble(hanr_arima(), hanr_arima(), hanr_arima()) #model <- har_ensemble(hanr_fbiad(), hanr_arima(), hanr_emd())  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of event detection — har_eval","title":"Evaluation of event detection — har_eval","text":"Evaluation event detection (traditional hard evaluation)","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of event detection — har_eval","text":"","code":"har_eval()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of event detection — har_eval","text":"har_eval object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of event detection — har_eval","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time change point using GARCH model <- hcp_garch()  # fitting the model model <- fit(model, dataset$serie)  # making detections detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 52  52  TRUE changepoint  # evaluating the detections evaluation <- evaluate(har_eval(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0     1     #> FALSE     1     99     # ploting the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of event detection — har_eval_soft","title":"Evaluation of event detection — har_eval_soft","text":"Evaluation event detection using SoftED doi:10.48550/arXiv.2304.00439","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of event detection — har_eval_soft","text":"","code":"har_eval_soft(sw_size = 15)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of event detection — har_eval_soft","text":"sw_size tolerance window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of event detection — har_eval_soft","text":"har_eval_soft object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_eval_soft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of event detection — har_eval_soft","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using the simple dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time change point using GARCH model <- hcp_garch()  # fitting the model model <- fit(model, dataset$serie)  # making detections detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 52  52  TRUE changepoint  # evaluating the detections evaluation <- evaluate(har_eval_soft(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0.87  0.13  #> FALSE     0.13  99.87  # ploting the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot event detection on a time series — har_plot","title":"Plot event detection on a time series — har_plot","text":"accepts harbinger, time series, data.frame events, parameter mark detected change points, threshold y-axis index time series","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot event detection on a time series — har_plot","text":"","code":"har_plot(   obj,   serie,   detection = NULL,   event = NULL,   mark.cp = TRUE,   ylim = NULL,   idx = NULL,   pointsize = 0.5,   colors = c(\"green\", \"blue\", \"red\", \"purple\"),   yline = NULL )"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot event detection on a time series — har_plot","text":"obj harbinger detector serie time series detection detection event events mark.cp show change points ylim limits y-axis idx labels x observations pointsize default point size colors default colors event detection: green TP, blue FN, red FP, purple means observations part sequence. yline values plotting horizontal dashed lines","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot event detection on a time series — har_plot","text":"time series plot marked events","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/har_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot event detection on a time series — har_plot","text":"","code":"library(daltoolbox)  #loading the example database data(examples_anomalies)  #Using the simple time series dataset <- examples_anomalies$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9689124 FALSE #> 3 0.8775826 FALSE #> 4 0.7316889 FALSE #> 5 0.5403023 FALSE #> 6 0.3153224 FALSE  # setting up time change point using GARCH model <- hanr_arima()  # fitting the model model <- fit(model, dataset$serie)  # making detections detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event    type #> 50  50  TRUE anomaly  # evaluating the detections evaluation <- evaluate(har_eval_soft(), detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      1     0     #> FALSE     0     100    # ploting the results grf <- har_plot(model, dataset$serie, detection, dataset$event) plot(grf)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger — harbinger","title":"Harbinger — harbinger","text":"Ancestor class time series event detection","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger — harbinger","text":"","code":"harbinger()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger — harbinger","text":"Harbinger object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harbinger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger — harbinger","text":"","code":"#See examples of detectors for anomalies, change points, and motifs #at https://cefet-rj-dal.github.io/harbinger"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":null,"dir":"Reference","previous_headings":"","what":"Harbinger Utils — harutils","title":"Harbinger Utils — harutils","text":"Utility class contains major distance measures, threshold limits, outliers grouping functions","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harbinger Utils — harutils","text":"","code":"harutils()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harbinger Utils — harutils","text":"Harbinger Utils","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/harutils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harbinger Utils — harutils","text":"","code":"# See ?hanc_ml for an example of anomaly detection using machine learning classification"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":null,"dir":"Reference","previous_headings":"","what":"At most one change (AMOC) method — hcp_amoc","title":"At most one change (AMOC) method — hcp_amoc","text":"Change-point detection method focus identify one change point mean/variance doi:10.1093/biomet/57.1.1. wraps amoc implementation available changepoint library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"At most one change (AMOC) method — hcp_amoc","text":"","code":"hcp_amoc()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"At most one change (AMOC) method — hcp_amoc","text":"hcp_amoc object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_amoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"At most one change (AMOC) method — hcp_amoc","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_amoc()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 84  84  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary segmentation (BinSeg) method — hcp_binseg","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"Change-point detection method focus identify change points mean/variance doi:10.2307/2529204. wraps BinSeg implementation available changepoint library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"","code":"hcp_binseg(Q = 2)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"Q maximum number change-points search using BinSeg method","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"hcp_binseg object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_binseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary segmentation (BinSeg) method — hcp_binseg","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_binseg()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie) #> Warning: The number of changepoints identified is Q, it is advised to increase Q to make sure changepoints have not been missed.  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 19  19  TRUE changepoint #> 85  85  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using ARIMA — hcp_cf_arima","title":"Change Finder using ARIMA — hcp_cf_arima","text":"Change-point detection related event/trend change detection. Change Finder ARIMA detects change points based deviations relative ARIMA model doi:10.1109/TKDE.2006.1599387. wraps ARIMA model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using ARIMA — hcp_cf_arima","text":"","code":"hcp_cf_arima(sw_size = NULL)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using ARIMA — hcp_cf_arima","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using ARIMA — hcp_cf_arima","text":"hcp_cf_arima object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using ARIMA — hcp_cf_arima","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_cf_arima()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 51  51  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using ETS — hcp_cf_ets","title":"Change Finder using ETS — hcp_cf_ets","text":"Change-point detection related event/trend change detection. Change Finder ETS detects change points based deviations relative trend component (T), seasonal component (S), error term (E) model doi:10.1109/TKDE.2006.1599387. wraps ETS model presented forecast library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using ETS — hcp_cf_ets","text":"","code":"hcp_cf_ets(sw_size = 7)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using ETS — hcp_cf_ets","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using ETS — hcp_cf_ets","text":"hcp_cf_ets object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_ets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using ETS — hcp_cf_ets","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_cf_ets()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 51  51  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using LR — hcp_cf_lr","title":"Change Finder using LR — hcp_cf_lr","text":"Change-point detection related event/trend change detection. Change Finder LR detects change points based deviations relative linear regression model doi:10.1109/TKDE.2006.1599387.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using LR — hcp_cf_lr","text":"","code":"hcp_cf_lr(sw_size = 30)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using LR — hcp_cf_lr","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using LR — hcp_cf_lr","text":"hcp_cf_lr object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_cf_lr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using LR — hcp_cf_lr","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_cf_lr()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #> [1] idx   event type  #> <0 rows> (or 0-length row.names)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":null,"dir":"Reference","previous_headings":"","what":"Chow test method — hcp_chow","title":"Chow test method — hcp_chow","text":"Change-point detection method focus identifying structural changes  doi:10.18637/jss.v007.i02. wraps Fstats breakpoints implementation available strucchange library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chow test method — hcp_chow","text":"","code":"hcp_chow()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chow test method — hcp_chow","text":"hcp_chow object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_chow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chow test method — hcp_chow","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_chow()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 50  50  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Finder using GARCH — hcp_garch","title":"Change Finder using GARCH — hcp_garch","text":"Change-point detection related event/trend change detection. Change Finder GARCH detects change points based deviations relative linear regression model doi:10.1109/TKDE.2006.1599387. wraps GARCH model presented rugarch library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Finder using GARCH — hcp_garch","text":"","code":"hcp_garch(sw_size = 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Finder using GARCH — hcp_garch","text":"sw_size Sliding window size","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Finder using GARCH — hcp_garch","text":"hcp_garch object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_garch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Finder using GARCH — hcp_garch","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using volatility example dataset <- examples_changepoints$volatility head(dataset) #>         serie event #> 1  1.61424200 FALSE #> 2  1.19696424 FALSE #> 3 -0.02275846 FALSE #> 4 -2.22607912 FALSE #> 5  0.01189136 FALSE #> 6 -0.03898793 FALSE  # setting up change point method model <- hcp_garch()  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>     idx event        type #> 196 196  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Fluctuation Test (GFT) — hcp_gft","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"GFT detection method focuses identifying structural changes  doi:10.18637/jss.v007.i02. wraps breakpoints implementation available strucchange library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"","code":"hcp_gft()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"hcp_chow object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_gft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Fluctuation Test (GFT) — hcp_gft","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_gft()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 49  49  TRUE changepoint #> 69  69  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":null,"dir":"Reference","previous_headings":"","what":"Pruned exact linear time (PELT) method — hcp_pelt","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"Change-point detection method focus identifying multiple exact change points mean/variance doi:10.1080/01621459.2012.737745. wraps BinSeg implementation available changepoint library.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"","code":"hcp_pelt()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"hcp_pelt object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hcp_pelt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pruned exact linear time (PELT) method — hcp_pelt","text":"","code":"library(daltoolbox)  #loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method model <- hcp_pelt()  # fitting the model model <- fit(model, dataset$serie)  # execute the detection method detection <- detect(model, dataset$serie)  # filtering detected events print(detection[(detection$event),]) #>    idx event        type #> 9    9  TRUE changepoint #> 19  19  TRUE changepoint #> 29  29  TRUE changepoint #> 39  39  TRUE changepoint #> 60  60  TRUE changepoint #> 71  71  TRUE changepoint #> 81  81  TRUE changepoint #> 91  91  TRUE changepoint"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Discord discovery using Matrix Profile — hdis_mp","title":"Discord discovery using Matrix Profile — hdis_mp","text":"Discord discovery using Matrix Profile doi:10.32614/RJ-2020-021","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discord discovery using Matrix Profile — hdis_mp","text":"","code":"hdis_mp(mode = \"stamp\", w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discord discovery using Matrix Profile — hdis_mp","text":"mode mode computing distance sequences. Available options include: \"stomp\", \"stamp\", \"simple\", \"mstomp\", \"scrimp\", \"valmod\", \"pmp\" w word size qtd number occurrences classified discords","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discord discovery using Matrix Profile — hdis_mp","text":"hdis_mp object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hdis_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discord discovery using Matrix Profile — hdis_mp","text":"","code":"library(daltoolbox)  #loading the example database data(examples_motifs)  #Using sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # setting up discord discovery method model <- hdis_mp(\"stamp\", 4, 3)  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie) #> Finished in 0.05 secs  # filtering detected events print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 47  47  TRUE motif   1      4 #> 53  53  TRUE motif   1      4 #> 72  72  TRUE motif   1      4 #> 78  78  TRUE motif   1      4"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif discovery using Matrix Profile — hmo_mp","title":"Motif discovery using Matrix Profile — hmo_mp","text":"Motif discovery using Matrix Profile doi:10.32614/RJ-2020-021","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif discovery using Matrix Profile — hmo_mp","text":"","code":"hmo_mp(mode = \"stamp\", w, qtd)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Motif discovery using Matrix Profile — hmo_mp","text":"mode mode computing distance sequences. Available options include: \"stomp\", \"stamp\", \"simple\", \"mstomp\", \"scrimp\", \"valmod\", \"pmp\" w word size qtd number occurrences classified motifs","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Motif discovery using Matrix Profile — hmo_mp","text":"hmo_mp object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmo_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif discovery using Matrix Profile — hmo_mp","text":"","code":"library(daltoolbox)  #loading the example database data(examples_motifs)  #Using sequence example dataset <- examples_motifs$simple head(dataset) #>       serie event #> 1 1.0000000 FALSE #> 2 0.9939124 FALSE #> 3 0.9275826 FALSE #> 4 0.8066889 FALSE #> 5 0.6403023 FALSE #> 6 0.4403224 FALSE  # setting up motif discovery method model <- hmo_mp(\"stamp\", 4, 3)  # fitting the model model <- fit(model, dataset$serie)  detection <- detect(model, dataset$serie) #> Finished in 0.02 secs  # filtering detected events print(detection[(detection$event),]) #>    idx event  type seq seqlen #> 6    6  TRUE motif   3      4 #> 19  19  TRUE motif   2      4 #> 25  25  TRUE motif   1      4 #> 31  31  TRUE motif   3      4 #> 44  44  TRUE motif   2      4 #> 56  56  TRUE motif   3      4 #> 69  69  TRUE motif   2      4 #> 75  75  TRUE motif   1      4 #> 81  81  TRUE motif   3      4 #> 94  94  TRUE motif   2      4"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate anomaly detector using PCA — hmu_pca","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"Multivariate anomaly detector using PCA doi:10.1016/0098-3004(93)90090-R","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"","code":"hmu_pca()"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"hmu_pca object","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/hmu_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate anomaly detector using PCA — hmu_pca","text":"","code":"library(daltoolbox)  #loading the example database data(examples_harbinger)  #Using the time series 9 dataset <- examples_harbinger$multidimensional head(dataset) #>        serie           x event #> 1 -0.6264538  0.40940184 FALSE #> 2 -0.8356286  1.58658843 FALSE #> 3  1.5952808 -0.33090780 FALSE #> 4  0.3295078 -2.28523554 FALSE #> 5 -0.8204684  2.49766159 FALSE #> 6  0.5757814 -0.01339952 FALSE  # establishing hmu_pca method model <- hmu_pca()  # fitting the model using the two columns of the dataset model <- fit(model, dataset[,1:2])  # making detections detection <- detect(model, dataset[,1:2])  # filtering detected events print(detection[(detection$event),]) #>     idx event    type #> 17   17  TRUE anomaly #> 94   94  TRUE anomaly #> 101 101  TRUE anomaly #> 190 190  TRUE anomaly  # evaluating the detections evaluation <- evaluate(model, detection$event, dataset$event) print(evaluation$confMatrix) #>           event       #> detection TRUE  FALSE #> TRUE      0     4     #> FALSE     1     195"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":null,"dir":"Reference","previous_headings":"","what":"Moving average smoothing — mas","title":"Moving average smoothing — mas","text":"mas() function returns simple moving average smoother provided time series.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moving average smoothing — mas","text":"","code":"mas(x, order)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moving average smoothing — mas","text":"x numeric vector univariate time series. order Order moving average smoother.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moving average smoothing — mas","text":"Numerical time series length length(x)-order+1 containing simple moving average smoothed values.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Moving average smoothing — mas","text":"moving average smoother transformation given $$(1/k) * ( x[t] + x[t+1] + ... + x[t+k-1] )$$ k=order, t assume values range 1:(n-k+1), n=length(x). See also ma forecast package.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Moving average smoothing — mas","text":"R.H. Shumway D.S. Stoffer, 2010, Time Series Analysis Applications: R Examples. 3rd ed. 2011 edition ed. New York, Springer.","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/mas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moving average smoothing — mas","text":"","code":"#loading the example database data(examples_changepoints)  #Using simple example dataset <- examples_changepoints$simple head(dataset) #>   serie event #> 1  0.00 FALSE #> 2  0.25 FALSE #> 3  0.50 FALSE #> 4  0.75 FALSE #> 5  1.00 FALSE #> 6  1.25 FALSE  # setting up change point method ma <- mas(dataset$serie, 5)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":null,"dir":"Reference","previous_headings":"","what":"SAX — trans_sax","title":"SAX — trans_sax","text":"SAX","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SAX — trans_sax","text":"","code":"trans_sax(alpha)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SAX — trans_sax","text":"alpha alphabet","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SAX — trans_sax","text":"obj","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_sax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SAX — trans_sax","text":"","code":"library(daltoolbox) vector <- 1:52 model <- trans_sax(alpha = 26) model <- fit(model, vector) xvector <- transform(model, vector) print(xvector) #>  [1] \"A\" \"A\" \"B\" \"B\" \"C\" \"C\" \"D\" \"D\" \"E\" \"E\" \"F\" \"F\" \"G\" \"G\" \"H\" \"H\" \"I\" \"I\" \"J\" #> [20] \"J\" \"K\" \"K\" \"L\" \"L\" \"M\" \"M\" \"N\" \"N\" \"O\" \"O\" \"P\" \"P\" \"Q\" \"Q\" \"R\" \"R\" \"S\" \"S\" #> [39] \"T\" \"T\" \"U\" \"U\" \"V\" \"V\" \"W\" \"W\" \"X\" \"X\" \"Y\" \"Y\" \"Z\" \"Z\""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":null,"dir":"Reference","previous_headings":"","what":"XSAX — trans_xsax","title":"XSAX — trans_xsax","text":"XSAX","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"XSAX — trans_xsax","text":"","code":"trans_xsax(alpha)"},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"XSAX — trans_xsax","text":"alpha alphabet","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"XSAX — trans_xsax","text":"obj","code":""},{"path":"https://cefet-rj-dal.github.io/harbinger/reference/trans_xsax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"XSAX — trans_xsax","text":"","code":"library(daltoolbox) vector <- 1:52 model <- trans_xsax(alpha = 52) model <- fit(model, vector) xvector <- transform(model, vector) print(xvector) #>  [1] \"00\" \"01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" \"08\" \"09\" \"0A\" \"0B\" \"0C\" \"0D\" \"0E\" #> [16] \"0F\" \"0G\" \"0H\" \"0I\" \"0J\" \"0K\" \"0L\" \"0M\" \"0N\" \"0O\" \"0P\" \"0Q\" \"0R\" \"0S\" \"0T\" #> [31] \"0U\" \"0V\" \"0W\" \"0X\" \"0Y\" \"0Z\" \"10\" \"11\" \"12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" #> [46] \"19\" \"1A\" \"1B\" \"1C\" \"1D\" \"1E\" \"1F\""}]
